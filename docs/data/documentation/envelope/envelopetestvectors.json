{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/envelope\/envelopetestvectors"]}],"metadata":{"title":"Envelope Test Vectors","roleHeading":"Article","role":"article","modules":[{"name":"Envelope"}]},"hierarchy":{"paths":[["doc:\/\/Envelope\/documentation\/Envelope"]]},"sections":[],"identifier":{"url":"doc:\/\/Envelope\/documentation\/Envelope\/EnvelopeTestVectors","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"title":"Test Vectors","identifiers":["doc:\/\/Envelope\/documentation\/Envelope\/SSKRTestVectors"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This document provides test vectors for "},{"code":"envelope","type":"codeVoice"},{"text":". It is generated by ","type":"text"},{"type":"codeVoice","code":"EnvelopeTestVectors.testGenerateEnvelopeTestVectors()"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"BCSwiftEnvelope"},{"type":"text","text":" test suite."}]},{"text":"Status","type":"heading","anchor":"Status","level":2},{"inlineContent":[{"type":"text","text":"Draft, with a reference implementation in this package."}],"type":"paragraph"},{"level":2,"text":"Constant Test Data","type":"heading","anchor":"Constant-Test-Data"},{"inlineContent":[{"text":"These test vectors use these fixed seed values, from which other key pairs are derived:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Aliceâ€™s Seed: ","type":"text"},{"code":"82f32c855d3d542256180810797e0073","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Bobâ€™s Seed: ","type":"text"},{"code":"187a5973c64d359c836eba466a44db7b","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Carolâ€™s Seed: ","type":"text"},{"type":"codeVoice","code":"8574afab18e229651c1be8f76ffee523"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"These objects are normally random, but they are fixed for these test vectors:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Symmetric key used for encryption: "},{"code":"526afd95b2229c5381baec4a1788507a3c4a566ca5cce64543b46ad12aff0035","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Nonce for encryption: "},{"type":"codeVoice","code":"4d785658f36c22fb5aed3ac0"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Random generator for signing returns pseudorandom sequence beginning: "},{"code":"7eb559bbbf6cce2632cf9f194aeb50943de7e1cbad54dcfab27a42759f5e2fed518684c556472008a67932f7c682125b50cb72e8216f6906358fdaf28d3545532daee0c5bb5023f50cd8e71ec14901ac746c576c481b893be6656b80622b3a564e59b4e2","type":"codeVoice"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Contents","text":"Contents"},{"items":[{"content":[{"inlineContent":[{"isActive":true,"identifier":"#Test-Vector-1-Hello-World","type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"#Test-Vector-2-Signed-Plaintext","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"#Test-Vector-3-Multisigned-Plaintext","type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"#Test-Vector-4-Symmetric-Encryption","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"#Test-Vector-5-Sign-Then-Encrypt","type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"#Test-Vector-6-Encrypt-Then-Sign","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"#Test-Vector-7-MultiRecipient","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"#Test-Vector-8-Visible-Signature-MultiRecipient","type":"reference","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"#Test-Vector-9-Verifiable-Credential","type":"reference","isActive":true}]}]},{"content":[{"inlineContent":[{"identifier":"#Test-Vector-10-Redacted-Verifiable-Credential","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"type":"orderedList"},{"text":"Test Vector 1: Hello, World!","level":2,"type":"heading","anchor":"Test-Vector-1-Hello-World"},{"inlineContent":[{"text":"The simplest case: encoding a plaintext string as the envelopeâ€™s ","type":"text"},{"code":"subject","type":"codeVoice"},{"type":"text","text":". The "},{"code":"subject","type":"codeVoice"},{"type":"text","text":" can be any CBOR-encodable structure."}],"type":"paragraph"},{"type":"heading","text":"Payload in Envelope Notation","level":3,"anchor":"Payload-in-Envelope-Notation"},{"type":"codeListing","syntax":null,"code":["\"Hello.\""]},{"anchor":"UR","level":3,"type":"heading","text":"UR"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"code":"type","type":"codeVoice"},{"type":"text","text":" field serves this purpose."}],"type":"emphasis"}]},{"syntax":null,"type":"codeListing","code":["ur:envelope\/tpcsiyfdihjzjzjldmprrhtypk"]},{"type":"heading","text":"Tagged CBOR Binary","level":3,"anchor":"Tagged-CBOR-Binary"},{"syntax":null,"type":"codeListing","code":["d8c8d8186648656c6c6f2e"]},{"text":"Tagged CBOR Diagnostic Notation","level":3,"anchor":"Tagged-CBOR-Diagnostic-Notation","type":"heading"},{"code":["200(   \/ envelope \/","   24(\"Hello.\")   \/ leaf \/",")"],"syntax":null,"type":"codeListing"},{"text":"Tagged CBOR Annotated Binary","type":"heading","level":3,"anchor":"Tagged-CBOR-Annotated-Binary"},{"type":"codeListing","syntax":null,"code":["d8 18              # tag(24) leaf","   66              # text(6)","      48656c6c6f2e # \"Hello.\""]},{"anchor":"Test-Vector-2-Signed-Plaintext","level":2,"type":"heading","text":"Test Vector 2: Signed Plaintext"},{"inlineContent":[{"text":"A string has been signed by Alice.","type":"text"}],"type":"paragraph"},{"type":"heading","level":3,"text":"Payload in Envelope Notation","anchor":"Payload-in-Envelope-Notation"},{"type":"codeListing","syntax":null,"code":["\"Hello.\" [","    'verifiedBy': Signature","]"]},{"type":"heading","text":"UR","anchor":"UR","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"inlineContent":[{"text":"The CBOR in a UR is never tagged, because the UR ","type":"text"},{"type":"codeVoice","code":"type"},{"text":" field serves this purpose.","type":"text"}],"type":"emphasis"}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/lftpcsiyfdihjzjzjldmoyaxtpcstansghhdfzjpaabyoypfeeadfyhgeepdqdahhdjensimihpdylyalayklgnlkogrlftywswfkglruojepruemdbbwzdmfeiadtoehgvtrlieimnljljywzvlbyjpfnvdgrinndvaweflcfsngw"]},{"type":"heading","level":3,"text":"Tagged CBOR Binary","anchor":"Tagged-CBOR-Binary"},{"syntax":null,"type":"codeListing","code":["d8c882d8186648656c6c6f2ea103d818d99c545840720411a1b03401445734a8b305586b9c6a65a8f7f880f58d99764b82d4eff37b84dc6bb2de9514f22e456329a257e0b7646a996f74f2e311723ce74b699be6ed"]},{"anchor":"Tagged-CBOR-Diagnostic-Notation","text":"Tagged CBOR Diagnostic Notation","level":3,"type":"heading"},{"type":"codeListing","code":["200(   \/ envelope \/","   [","      24(\"Hello.\"),   \/ leaf \/","      {","         3:","         24(   \/ leaf \/","            40020(   \/ signature \/","               h'720411a1b03401445734a8b305586b9c6a65a8f7f880f58d99764b82d4eff37b84dc6bb2de9514f22e456329a257e0b7646a996f74f2e311723ce74b699be6ed'","            )","         )","      }","   ]",")"],"syntax":null},{"type":"heading","anchor":"Tagged-CBOR-Annotated-Binary","text":"Tagged CBOR Annotated Binary","level":3},{"syntax":null,"code":["82                                       # array(2)","   d8 18                                 # tag(24) leaf","      66                                 # text(6)","         48656c6c6f2e                    # \"Hello.\"","   a1                                    # map(1)","      03                                 # unsigned(3)","      d8 18                              # tag(24) leaf","         d9 9c54                         # tag(40020) signature","            5840                         # bytes(64)","               720411a1b03401445734a8b305586b9c6a65a8f7f880f58d99764b82d4eff37b84dc6bb2de9514f22e456329a257e0b7646a996f74f2e311723ce74b699be6ed"],"type":"codeListing"},{"level":2,"type":"heading","text":"Test Vector 3: Multisigned Plaintext","anchor":"Test-Vector-3-Multisigned-Plaintext"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alice and Carol jointly send a signed plaintext message to Bob."}]},{"type":"heading","text":"Payload in Envelope Notation","level":3,"anchor":"Payload-in-Envelope-Notation"},{"type":"codeListing","code":["\"Hello.\" [","    'verifiedBy': Signature","    'verifiedBy': Signature","]"],"syntax":null},{"type":"heading","level":3,"text":"UR","anchor":"UR"},{"type":"paragraph","inlineContent":[{"text":"ðŸ‘‰ ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"text":" field serves this purpose.","type":"text"}]}]},{"code":["ur:envelope\/lstpcsiyfdihjzjzjldmoyaxtpcstansghhdfzzcgufsaolbmoidurpfrorofrhsdinnnbynaxetmuimwktantenwtahctmdvspmhedrrtisvtmnrnvtfzsnloldahfeamdihggrtlwdiansmyetnbqzeemtdynshhecjeoyaxtpcstansghhdfzjpaabyoypfeeadfyhgeepdqdahhdjensimihpdylyalayklgnlkogrlftywswfkglruojepruemdbbwzdmfeiadtoehgvtrlieimnljljywzvlbyjpfnvdgrinndvawesfnsswwz"],"syntax":null,"type":"codeListing"},{"level":3,"type":"heading","anchor":"Tagged-CBOR-Binary","text":"Tagged CBOR Binary"},{"type":"codeListing","syntax":null,"code":["d8c883d8186648656c6c6f2ea103d818d99c545840fd533d027f9262dfb0b8b83b61279ea0f60338936af4d99d36f0051f95e8ad5f2ac068e08ebee040cd888905450627574bd5ea639c8f38a0b43496309c5c356ba103d818d99c545840720411a1b03401445734a8b305586b9c6a65a8f7f880f58d99764b82d4eff37b84dc6bb2de9514f22e456329a257e0b7646a996f74f2e311723ce74b699be6ed"]},{"type":"heading","text":"Tagged CBOR Diagnostic Notation","anchor":"Tagged-CBOR-Diagnostic-Notation","level":3},{"code":["200(   \/ envelope \/","   [","      24(\"Hello.\"),   \/ leaf \/","      {","         3:","         24(   \/ leaf \/","            40020(   \/ signature \/","               h'fd533d027f9262dfb0b8b83b61279ea0f60338936af4d99d36f0051f95e8ad5f2ac068e08ebee040cd888905450627574bd5ea639c8f38a0b43496309c5c356b'","            )","         )","      },","      {","         3:","         24(   \/ leaf \/","            40020(   \/ signature \/","               h'720411a1b03401445734a8b305586b9c6a65a8f7f880f58d99764b82d4eff37b84dc6bb2de9514f22e456329a257e0b7646a996f74f2e311723ce74b699be6ed'","            )","         )","      }","   ]",")"],"type":"codeListing","syntax":null},{"type":"heading","anchor":"Tagged-CBOR-Annotated-Binary","text":"Tagged CBOR Annotated Binary","level":3},{"code":["83                                       # array(3)","   d8 18                                 # tag(24) leaf","      66                                 # text(6)","         48656c6c6f2e                    # \"Hello.\"","   a1                                    # map(1)","      03                                 # unsigned(3)","      d8 18                              # tag(24) leaf","         d9 9c54                         # tag(40020) signature","            5840                         # bytes(64)","               fd533d027f9262dfb0b8b83b61279ea0f60338936af4d99d36f0051f95e8ad5f2ac068e08ebee040cd888905450627574bd5ea639c8f38a0b43496309c5c356b","   a1                                    # map(1)","      03                                 # unsigned(3)","      d8 18                              # tag(24) leaf","         d9 9c54                         # tag(40020) signature","            5840                         # bytes(64)","               720411a1b03401445734a8b305586b9c6a65a8f7f880f58d99764b82d4eff37b84dc6bb2de9514f22e456329a257e0b7646a996f74f2e311723ce74b699be6ed"],"syntax":null,"type":"codeListing"},{"text":"Test Vector 4: Symmetric Encryption","type":"heading","level":2,"anchor":"Test-Vector-4-Symmetric-Encryption"},{"inlineContent":[{"type":"text","text":"Alice and Bob have agreed to use a symmetric key."}],"type":"paragraph"},{"text":"Payload in Envelope Notation","level":3,"type":"heading","anchor":"Payload-in-Envelope-Notation"},{"type":"codeListing","syntax":null,"code":["ENCRYPTED"]},{"anchor":"UR","type":"heading","text":"UR","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field serves this purpose."}],"type":"emphasis"}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/tansfwlrgraslkbwlfnelbvysgghkpaegsgtkshfhdwfjzcpzohtweftrtgdynbbcklfolneolishesannwplycfmtcthddatansfphdcxlksojzuyktbykovsecbygebsldeninbdfptkwebtwzdpadglwetbgltnwdmwhlhkgaemrhzo"]},{"level":3,"anchor":"Tagged-CBOR-Binary","text":"Tagged CBOR Binary","type":"heading"},{"syntax":null,"code":["d8c8d99c42844b098c13829f7fe1ca5475004c4d785658f36c22fb5aed3ac050f6141e82a69fa6685fc29eec8119961f5825d99c4158208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59"],"type":"codeListing"},{"anchor":"Tagged-CBOR-Diagnostic-Notation","text":"Tagged CBOR Diagnostic Notation","level":3,"type":"heading"},{"type":"codeListing","syntax":null,"code":["200(   \/ envelope \/","   40002(   \/ encrypted \/","      [","         h'098c13829f7fe1ca547500',","         h'4d785658f36c22fb5aed3ac0',","         h'f6141e82a69fa6685fc29eec8119961f',","         h'd99c4158208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59'","      ]","   )",")"]},{"anchor":"Tagged-CBOR-Annotated-Binary","level":3,"type":"heading","text":"Tagged CBOR Annotated Binary"},{"syntax":null,"type":"codeListing","code":["d9 9c42                                  # tag(40002) encrypted","   84                                    # array(4)","      4b                                 # bytes(11)","         098c13829f7fe1ca547500","      4c                                 # bytes(12)","         4d785658f36c22fb5aed3ac0","      50                                 # bytes(16)","         f6141e82a69fa6685fc29eec8119961f","      5825                               # bytes(37)","         d99c4158208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59"]},{"text":"Test Vector 5: Sign Then Encrypt","level":2,"type":"heading","anchor":"Test-Vector-5-Sign-Then-Encrypt"},{"inlineContent":[{"text":"A message is first signed, then encrypted. Its signature can only be checked once the envelope is decrypted.","type":"text"}],"type":"paragraph"},{"anchor":"Payload-in-Envelope-Notation","level":3,"text":"Payload in Envelope Notation","type":"heading"},{"syntax":null,"code":["ENCRYPTED"],"type":"codeListing"},{"level":3,"type":"heading","text":"UR","anchor":"UR"},{"inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"type":"emphasis","inlineContent":[{"text":"The CBOR in a UR is never tagged, because the UR ","type":"text"},{"code":"type","type":"codeVoice"},{"type":"text","text":" field serves this purpose."}]}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["ur:envelope\/tansfwlrhdhgaslkbwgmkgwsnsrtjolbfwmolkehdmrnghdwpmwdghoevlmudroyuepsqdvynehfmykkbbcngartuomeadqdceghgshscsrnyncndscaqdmnbetdvstnhnbbktjzolbawdmkfsueftztzcnnckldsoynkpprgyiehglypmtbkpjtpygsgtkshfhdwfjzcpzohtweftrtgdhfckhybsmyhhsnfxrsemnlsrpkltclbehddatansfphdcxwppaltgdlbjnaepywdoypdhldszsaaflonfnlblfjtoxmstomklpcewdhlemledtstiouogh"]},{"type":"heading","text":"Tagged CBOR Binary","level":3,"anchor":"Tagged-CBOR-Binary"},{"type":"codeListing","syntax":null,"code":["d8c8d99c42845857098c13527bef9cc0707f42928c312ebe542cadea54a2e3932aa1deacb3e19f568f79142349c0dc9101b31c544c6118bef623261db38e10d2e8da6014776ca60eea983dde3afcfd9e1e89c9f675b251645781add6756eab4c4d785658f36c22fb5aed3ac050561e5e0f8f5ccd43bf3799c3aa8721105825d99c415820ecb187507f6d00abeaa1a85d26fa0447a53c7f826ea497ce98851cea5d378a29"]},{"level":3,"anchor":"Tagged-CBOR-Diagnostic-Notation","type":"heading","text":"Tagged CBOR Diagnostic Notation"},{"type":"codeListing","syntax":null,"code":["200(   \/ envelope \/","   40002(   \/ encrypted \/","      [","         h'098c13527bef9cc0707f42928c312ebe542cadea54a2e3932aa1deacb3e19f568f79142349c0dc9101b31c544c6118bef623261db38e10d2e8da6014776ca60eea983dde3afcfd9e1e89c9f675b251645781add6756eab',","         h'4d785658f36c22fb5aed3ac0',","         h'561e5e0f8f5ccd43bf3799c3aa872110',","         h'd99c415820ecb187507f6d00abeaa1a85d26fa0447a53c7f826ea497ce98851cea5d378a29'","      ]","   )",")"]},{"anchor":"Tagged-CBOR-Annotated-Binary","type":"heading","level":3,"text":"Tagged CBOR Annotated Binary"},{"syntax":null,"code":["d9 9c42                                  # tag(40002) encrypted","   84                                    # array(4)","      5857                               # bytes(87)","         098c13527bef9cc0707f42928c312ebe542cadea54a2e3932aa1deacb3e19f568f79142349c0dc9101b31c544c6118bef623261db38e10d2e8da6014776ca60eea983dde3afcfd9e1e89c9f675b251645781add6756eab","      4c                                 # bytes(12)","         4d785658f36c22fb5aed3ac0","      50                                 # bytes(16)","         561e5e0f8f5ccd43bf3799c3aa872110","      5825                               # bytes(37)","         d99c415820ecb187507f6d00abeaa1a85d26fa0447a53c7f826ea497ce98851cea5d378a29"],"type":"codeListing"},{"text":"Test Vector 6: Encrypt Then Sign","anchor":"Test-Vector-6-Encrypt-Then-Sign","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"A message is first encrypted, then signed. Its signature may be checked before the envelope is decrypted."}],"type":"paragraph"},{"anchor":"Payload-in-Envelope-Notation","level":3,"type":"heading","text":"Payload in Envelope Notation"},{"syntax":null,"type":"codeListing","code":["ENCRYPTED [","    'verifiedBy': Signature","]"]},{"level":3,"anchor":"UR","text":"UR","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"ðŸ‘‰ ","type":"text"},{"inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"code":"type","type":"codeVoice"},{"text":" field serves this purpose.","type":"text"}],"type":"emphasis"}]},{"code":["ur:envelope\/lftansfwlrgraslkbwlfnelbvysgghkpaegsgtkshfhdwfjzcpzohtweftrtgdynbbcklfolneolishesannwplycfmtcthddatansfphdcxlksojzuyktbykovsecbygebsldeninbdfptkwebtwzdpadglwetbgltnwdmwhlhkoyaxtpcstansghhdfzjpaabyoypfeeadfyhgeepdqdahhdjensimihpdylyalayklgnlkogrlftywswfkglruojepruemdbbwzdmfeiadtoehgvtrlieimnljljywzvlbyjpfnvdgrinndvawewdsrreon"],"type":"codeListing","syntax":null},{"text":"Tagged CBOR Binary","anchor":"Tagged-CBOR-Binary","type":"heading","level":3},{"syntax":null,"code":["d8c882d99c42844b098c13829f7fe1ca5475004c4d785658f36c22fb5aed3ac050f6141e82a69fa6685fc29eec8119961f5825d99c4158208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59a103d818d99c545840720411a1b03401445734a8b305586b9c6a65a8f7f880f58d99764b82d4eff37b84dc6bb2de9514f22e456329a257e0b7646a996f74f2e311723ce74b699be6ed"],"type":"codeListing"},{"text":"Tagged CBOR Diagnostic Notation","level":3,"type":"heading","anchor":"Tagged-CBOR-Diagnostic-Notation"},{"code":["200(   \/ envelope \/","   [","      40002(   \/ encrypted \/","         [","            h'098c13829f7fe1ca547500',","            h'4d785658f36c22fb5aed3ac0',","            h'f6141e82a69fa6685fc29eec8119961f',","            h'd99c4158208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59'","         ]","      ),","      {","         3:","         24(   \/ leaf \/","            40020(   \/ signature \/","               h'720411a1b03401445734a8b305586b9c6a65a8f7f880f58d99764b82d4eff37b84dc6bb2de9514f22e456329a257e0b7646a996f74f2e311723ce74b699be6ed'","            )","         )","      }","   ]",")"],"type":"codeListing","syntax":null},{"text":"Tagged CBOR Annotated Binary","type":"heading","anchor":"Tagged-CBOR-Annotated-Binary","level":3},{"syntax":null,"code":["82                                       # array(2)","   d9 9c42                               # tag(40002) encrypted","      84                                 # array(4)","         4b                              # bytes(11)","            098c13829f7fe1ca547500","         4c                              # bytes(12)","            4d785658f36c22fb5aed3ac0","         50                              # bytes(16)","            f6141e82a69fa6685fc29eec8119961f","         5825                            # bytes(37)","            d99c4158208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59","   a1                                    # map(1)","      03                                 # unsigned(3)","      d8 18                              # tag(24) leaf","         d9 9c54                         # tag(40020) signature","            5840                         # bytes(64)","               720411a1b03401445734a8b305586b9c6a65a8f7f880f58d99764b82d4eff37b84dc6bb2de9514f22e456329a257e0b7646a996f74f2e311723ce74b699be6ed"],"type":"codeListing"},{"type":"heading","anchor":"Test-Vector-7-Multi-Recipient","text":"Test Vector 7: Multi-Recipient","level":2},{"inlineContent":[{"type":"text","text":"Alice encrypts a message using the public keys of Bob and Carol so that it can only be decrypted by the private key of either Bob or Carol. Each of the "},{"type":"codeVoice","code":"SealedMessage"},{"text":" encrypts just the symmetric key used to encrypt the payload.","type":"text"}],"type":"paragraph"},{"anchor":"Payload-in-Envelope-Notation","type":"heading","level":3,"text":"Payload in Envelope Notation"},{"code":["ENCRYPTED [","    'hasRecipient': SealedMessage","    'hasRecipient': SealedMessage","]"],"type":"codeListing","syntax":null},{"text":"UR","anchor":"UR","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"ðŸ‘‰ ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"The CBOR in a UR is never tagged, because the UR ","type":"text"},{"type":"codeVoice","code":"type"},{"text":" field serves this purpose.","type":"text"}]}]},{"code":["ur:envelope\/lstansfwlrgraslkbwlfnelbvysgghkpaegsgtkshfhdwfjzcpzohtweftrtgdynbbcklfolneolishesannwplycfmtcthddatansfphdcxlksojzuyktbykovsecbygebsldeninbdfptkwebtwzdpadglwetbgltnwdmwhlhkoyahtpcstansgulftansfwlshddadefsuodidkrhbzbysaaycwgujprhcthhjtgrcmolgrjpdepmesylwllrpfdszosggetadwfejzgsgtkshfhdwfjzcpzohtweftrtgdrdzedsrknllycpclfyfeeohtykuemofetansgrhdcxwfvllybtethybasnvtfemerfrftscaoytymskbdncewyrnhlwtkorteyyaoltdctoyahtpcstansgulftansfwlshddatyesdpuyttvlolfyrtpslthswpdasazoaedtqzlghfdlasgsfsfdbwfysnaasrtooxahaxylmugsgtkshfhdwfjzcpzohtweftrtgdgmsopsrfcadewtesjtkegtpswmyabneytansgrhdcxwfvllybtethybasnvtfemerfrftscaoytymskbdncewyrnhlwtkorteyyaoltdctgrjoiscx"],"type":"codeListing","syntax":null},{"level":3,"anchor":"Tagged-CBOR-Binary","type":"heading","text":"Tagged CBOR Binary"},{"type":"codeListing","syntax":null,"code":["d8c883d99c42844b098c13829f7fe1ca5475004c4d785658f36c22fb5aed3ac050f6141e82a69fa6685fc29eec8119961f5825d99c4158208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59a105d818d99c5382d99c42835825283ddc2724b91511c2081b5372b91f5c6e4b16a64b7228ad39f7e984b026fbca4ad92c456c4c4d785658f36c22fb5aed3ac050bafe26bb998122214445335af5de9245d99c4b5820f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21fa105d818d99c5382d99c42835825d4392ddbd1e3a644c0ac8761ec25c2fb0029b48d562f094c3d481344cd04c3cea40503f7934c4d785658f36c22fb5aed3ac05052c9acbc1d28f0396e7c4dacebf80c32d99c4b5820f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f"]},{"text":"Tagged CBOR Diagnostic Notation","anchor":"Tagged-CBOR-Diagnostic-Notation","level":3,"type":"heading"},{"code":["200(   \/ envelope \/","   [","      40002(   \/ encrypted \/","         [","            h'098c13829f7fe1ca547500',","            h'4d785658f36c22fb5aed3ac0',","            h'f6141e82a69fa6685fc29eec8119961f',","            h'd99c4158208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59'","         ]","      ),","      {","         5:","         24(   \/ leaf \/","            40019(   \/ crypto-sealed \/","               [","                  40002(   \/ encrypted \/","                     [","                        h'283ddc2724b91511c2081b5372b91f5c6e4b16a64b7228ad39f7e984b026fbca4ad92c456c',","                        h'4d785658f36c22fb5aed3ac0',","                        h'bafe26bb998122214445335af5de9245'","                     ]","                  ),","                  40011(   \/ agreement-public-key \/","                     h'f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f'","                  )","               ]","            )","         )","      },","      {","         5:","         24(   \/ leaf \/","            40019(   \/ crypto-sealed \/","               [","                  40002(   \/ encrypted \/","                     [","                        h'd4392ddbd1e3a644c0ac8761ec25c2fb0029b48d562f094c3d481344cd04c3cea40503f793',","                        h'4d785658f36c22fb5aed3ac0',","                        h'52c9acbc1d28f0396e7c4dacebf80c32'","                     ]","                  ),","                  40011(   \/ agreement-public-key \/","                     h'f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f'","                  )","               ]","            )","         )","      }","   ]",")"],"syntax":null,"type":"codeListing"},{"level":3,"anchor":"Tagged-CBOR-Annotated-Binary","text":"Tagged CBOR Annotated Binary","type":"heading"},{"code":["83                                       # array(3)","   d9 9c42                               # tag(40002) encrypted","      84                                 # array(4)","         4b                              # bytes(11)","            098c13829f7fe1ca547500","         4c                              # bytes(12)","            4d785658f36c22fb5aed3ac0","         50                              # bytes(16)","            f6141e82a69fa6685fc29eec8119961f","         5825                            # bytes(37)","            d99c4158208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59","   a1                                    # map(1)","      05                                 # unsigned(5)","      d8 18                              # tag(24) leaf","         d9 9c53                         # tag(40019) crypto-sealed","            82                           # array(2)","               d9 9c42                   # tag(40002) encrypted","                  83                     # array(3)","                     5825                # bytes(37)","                        283ddc2724b91511c2081b5372b91f5c6e4b16a64b7228ad39f7e984b026fbca4ad92c456c","                     4c                  # bytes(12)","                        4d785658f36c22fb5aed3ac0","                     50                  # bytes(16)","                        bafe26bb998122214445335af5de9245","               d9 9c4b                   # tag(40011) agreement-public-key","                  5820                   # bytes(32)","                     f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f","   a1                                    # map(1)","      05                                 # unsigned(5)","      d8 18                              # tag(24) leaf","         d9 9c53                         # tag(40019) crypto-sealed","            82                           # array(2)","               d9 9c42                   # tag(40002) encrypted","                  83                     # array(3)","                     5825                # bytes(37)","                        d4392ddbd1e3a644c0ac8761ec25c2fb0029b48d562f094c3d481344cd04c3cea40503f793","                     4c                  # bytes(12)","                        4d785658f36c22fb5aed3ac0","                     50                  # bytes(16)","                        52c9acbc1d28f0396e7c4dacebf80c32","               d9 9c4b                   # tag(40011) agreement-public-key","                  5820                   # bytes(32)","                     f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f"],"type":"codeListing","syntax":null},{"text":"Test Vector 8: Visible Signature Multi-Recipient","anchor":"Test-Vector-8-Visible-Signature-Multi-Recipient","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Alice encrypts a message using the public keys of Bob and Carol so that it can only be decrypted by the private key of either Bob or Carol. Each of the "},{"type":"codeVoice","code":"SealedMessage"},{"type":"text","text":" encrypts just the symmetric key used to encrypt the payload. Alice then signs the envelope so her signature may be verified by anyone with her public key."}],"type":"paragraph"},{"anchor":"Payload-in-Envelope-Notation","text":"Payload in Envelope Notation","level":3,"type":"heading"},{"syntax":null,"code":["ENCRYPTED [","    'hasRecipient': SealedMessage","    'hasRecipient': SealedMessage","    'verifiedBy': Signature","]"],"type":"codeListing"},{"text":"UR","type":"heading","level":3,"anchor":"UR"},{"type":"paragraph","inlineContent":[{"text":"ðŸ‘‰ ","type":"text"},{"inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field serves this purpose."}],"type":"emphasis"}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/lrtansfwlrgraslkbwlfnelbvysgghkpaegsgtkshfhdwfjzcpzohtweftrtgdynbbcklfolneolishesannwplycfmtcthddatansfphdcxlksojzuyktbykovsecbygebsldeninbdfptkwebtwzdpadglwetbgltnwdmwhlhkoyahtpcstansgulftansfwlshddadefsuodidkrhbzbysaaycwgujprhcthhjtgrcmolgrjpdepmesylwllrpfdszosggetadwfejzgsgtkshfhdwfjzcpzohtweftrtgdrdzedsrknllycpclfyfeeohtykuemofetansgrhdcxwfvllybtethybasnvtfemerfrftscaoytymskbdncewyrnhlwtkorteyyaoltdctoyahtpcstansgulftansfwlshddatyesdpuyttvlolfyrtpslthswpdasazoaedtqzlghfdlasgsfsfdbwfysnaasrtooxahaxylmugsgtkshfhdwfjzcpzohtweftrtgdgmsopsrfcadewtesjtkegtpswmyabneytansgrhdcxwfvllybtethybasnvtfemerfrftscaoytymskbdncewyrnhlwtkorteyyaoltdctoyaxtpcstansghhdfzjpaabyoypfeeadfyhgeepdqdahhdjensimihpdylyalayklgnlkogrlftywswfkglruojepruemdbbwzdmfeiadtoehgvtrlieimnljljywzvlbyjpfnvdgrinndvaweoeeebatp"]},{"text":"Tagged CBOR Binary","level":3,"anchor":"Tagged-CBOR-Binary","type":"heading"},{"code":["d8c884d99c42844b098c13829f7fe1ca5475004c4d785658f36c22fb5aed3ac050f6141e82a69fa6685fc29eec8119961f5825d99c4158208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59a105d818d99c5382d99c42835825283ddc2724b91511c2081b5372b91f5c6e4b16a64b7228ad39f7e984b026fbca4ad92c456c4c4d785658f36c22fb5aed3ac050bafe26bb998122214445335af5de9245d99c4b5820f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21fa105d818d99c5382d99c42835825d4392ddbd1e3a644c0ac8761ec25c2fb0029b48d562f094c3d481344cd04c3cea40503f7934c4d785658f36c22fb5aed3ac05052c9acbc1d28f0396e7c4dacebf80c32d99c4b5820f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21fa103d818d99c545840720411a1b03401445734a8b305586b9c6a65a8f7f880f58d99764b82d4eff37b84dc6bb2de9514f22e456329a257e0b7646a996f74f2e311723ce74b699be6ed"],"type":"codeListing","syntax":null},{"text":"Tagged CBOR Diagnostic Notation","anchor":"Tagged-CBOR-Diagnostic-Notation","level":3,"type":"heading"},{"type":"codeListing","syntax":null,"code":["200(   \/ envelope \/","   [","      40002(   \/ encrypted \/","         [","            h'098c13829f7fe1ca547500',","            h'4d785658f36c22fb5aed3ac0',","            h'f6141e82a69fa6685fc29eec8119961f',","            h'd99c4158208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59'","         ]","      ),","      {","         5:","         24(   \/ leaf \/","            40019(   \/ crypto-sealed \/","               [","                  40002(   \/ encrypted \/","                     [","                        h'283ddc2724b91511c2081b5372b91f5c6e4b16a64b7228ad39f7e984b026fbca4ad92c456c',","                        h'4d785658f36c22fb5aed3ac0',","                        h'bafe26bb998122214445335af5de9245'","                     ]","                  ),","                  40011(   \/ agreement-public-key \/","                     h'f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f'","                  )","               ]","            )","         )","      },","      {","         5:","         24(   \/ leaf \/","            40019(   \/ crypto-sealed \/","               [","                  40002(   \/ encrypted \/","                     [","                        h'd4392ddbd1e3a644c0ac8761ec25c2fb0029b48d562f094c3d481344cd04c3cea40503f793',","                        h'4d785658f36c22fb5aed3ac0',","                        h'52c9acbc1d28f0396e7c4dacebf80c32'","                     ]","                  ),","                  40011(   \/ agreement-public-key \/","                     h'f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f'","                  )","               ]","            )","         )","      },","      {","         3:","         24(   \/ leaf \/","            40020(   \/ signature \/","               h'720411a1b03401445734a8b305586b9c6a65a8f7f880f58d99764b82d4eff37b84dc6bb2de9514f22e456329a257e0b7646a996f74f2e311723ce74b699be6ed'","            )","         )","      }","   ]",")"]},{"level":3,"type":"heading","text":"Tagged CBOR Annotated Binary","anchor":"Tagged-CBOR-Annotated-Binary"},{"syntax":null,"code":["84                                       # array(4)","   d9 9c42                               # tag(40002) encrypted","      84                                 # array(4)","         4b                              # bytes(11)","            098c13829f7fe1ca547500","         4c                              # bytes(12)","            4d785658f36c22fb5aed3ac0","         50                              # bytes(16)","            f6141e82a69fa6685fc29eec8119961f","         5825                            # bytes(37)","            d99c4158208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59","   a1                                    # map(1)","      05                                 # unsigned(5)","      d8 18                              # tag(24) leaf","         d9 9c53                         # tag(40019) crypto-sealed","            82                           # array(2)","               d9 9c42                   # tag(40002) encrypted","                  83                     # array(3)","                     5825                # bytes(37)","                        283ddc2724b91511c2081b5372b91f5c6e4b16a64b7228ad39f7e984b026fbca4ad92c456c","                     4c                  # bytes(12)","                        4d785658f36c22fb5aed3ac0","                     50                  # bytes(16)","                        bafe26bb998122214445335af5de9245","               d9 9c4b                   # tag(40011) agreement-public-key","                  5820                   # bytes(32)","                     f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f","   a1                                    # map(1)","      05                                 # unsigned(5)","      d8 18                              # tag(24) leaf","         d9 9c53                         # tag(40019) crypto-sealed","            82                           # array(2)","               d9 9c42                   # tag(40002) encrypted","                  83                     # array(3)","                     5825                # bytes(37)","                        d4392ddbd1e3a644c0ac8761ec25c2fb0029b48d562f094c3d481344cd04c3cea40503f793","                     4c                  # bytes(12)","                        4d785658f36c22fb5aed3ac0","                     50                  # bytes(16)","                        52c9acbc1d28f0396e7c4dacebf80c32","               d9 9c4b                   # tag(40011) agreement-public-key","                  5820                   # bytes(32)","                     f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f","   a1                                    # map(1)","      03                                 # unsigned(3)","      d8 18                              # tag(24) leaf","         d9 9c54                         # tag(40020) signature","            5840                         # bytes(64)","               720411a1b03401445734a8b305586b9c6a65a8f7f880f58d99764b82d4eff37b84dc6bb2de9514f22e456329a257e0b7646a996f74f2e311723ce74b699be6ed"],"type":"codeListing"},{"level":2,"anchor":"Test-Vector-9-Verifiable-Credential","type":"heading","text":"Test Vector 9: Verifiable Credential"},{"inlineContent":[{"type":"text","text":"John Smith is issued a Permanent Resident Card signed by the State of Example"}],"type":"paragraph"},{"text":"Payload in Envelope Notation","anchor":"Payload-in-Envelope-Notation","type":"heading","level":3},{"type":"codeListing","code":["{","    ARID(174842ea) [","        'isA': \"credential\"","        \"dateIssued\": 2022-04-27","        'holder': ARID(78bc3000) [","            'isA': \"Permanent Resident\"","            'isA': \"Person\"","            \"birthCountry\": \"bs\" [","                'note': \"The Bahamas\"","            ]","            \"birthDate\": 1974-02-18","            \"familyName\": \"SMITH\"","            \"givenName\": \"JOHN\"","            \"image\": Digest(03b7adb0) [","                'dereferenceVia': \"https:\/\/exampleledger.com\/digest\/36be30726befb65ca13b136ae29d8081f64792c2702415eb60ad1c56ed33c999\"","                'note': \"This is an image of John Smith.\"","            ]","            \"lprCategory\": \"C09\"","            \"lprNumber\": \"999-999-999\"","            \"residentSince\": 2018-01-07","            \"sex\": \"MALE\"","        ]","        'issuer': ARID(04363d5f) [","            'dereferenceVia': URI(https:\/\/exampleledger.com\/arid\/04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8)","            'note': \"Issued by the State of Example\"","        ]","        'note': \"The State of Example recognizes JOHN SMITH as a Permanent Resident.\"","    ]","} [","    'verifiedBy': Signature [","        'note': \"Made by the State of Example.\"","    ]","]"],"syntax":null},{"anchor":"UR","type":"heading","level":3,"text":"UR"},{"inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"type":"emphasis","inlineContent":[{"text":"The CBOR in a UR is never tagged, because the UR ","type":"text"},{"code":"type","type":"codeVoice"},{"text":" field serves this purpose.","type":"text"}]}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["ur:envelope\/lftpsplntpcstansgshdcxchfdfwwdsrzofytsyndsvetsndkbbelbtdmuskhfdtyntbcprocktyatktaxaospoyaatpcsksfxghisihcxgujyhsjyihcxjliycxfekshsjnjojzihcxjpihiajliojtinknihjkcxgegwfdglcxgugtgaghfdcxhsjkcxhscxgdihjpjnhsjtihjtjycxgmihjkinieihjtjydmoybtlstpcstansgshdcxaaenfsheytmseorfbsbzktrdrdfybkwntkeegetaveghzstattdertbswsihahvsoyaatpcsksckgajkjkkpihiecxidkkcxjyisihcxgujyhsjyihcxjliycxfekshsjnjojzihoyastpcstpcxksheisjyjyjojkftdldlihkshsjnjojzihjzihieioihjpdmiajljndlhsjpiniedldyeeeoeneoieeciyiyesesemeoeoidiadyiyehecememidhsidhseeeedyhsiyehiaiyeoeeeehsieesiheeeceeiyhsieesieeheyetiadydyiyihiyenecdyecihetoyadtpcsimiajpihieihjtjyinhsjzoybalktpcstansgshdcxksrfdyaeflkootmhhpsfrhronbeytkjpdwwdwtrkzocygawdwfcshepyhdaysguooytpcsjzidinjpjyisfxjlkpjtjyjpkklftpcsididjkoyaatpcsjeghisihcxfwhsishsjnhsjkoytpcsimiyhsjninjzkkglhsjnihtpcsihgugtgaghfdoytpcsinioinkoihjtglhsjnihtpcsiegegwfdgloyadtpcsiygdihjpjkjljtoyadtpcsjpgdihjpjnhsjtihjtjycxgmihjkinieihjtjyoytpcsjejzjojpfxhsjyihiojljpkktpcsiafxdyesoytpcsinidinjpjyisfyhsjyihtpcssecyatskiolaoytpcsinjzjojpglkpjnidihjptpcsjeesesesdpesesesdpesesesoytpcsjnjpihjkinieihjtjyguinjtiaihtpcssecyhtgyiaaeoytpcsihinjnhsioihlstpcstansfphdcxaxrlpmpfrpzsdlrplobkfrhevtmnbaemplhyinbdtlsfbefsvaylmdgtfzlnessaoyastpcskshsisjyjyjojkftdldlihkshsjnjojzihjzihieioihjpdmiajljndlieinioihjkjydleoenidiheodyemeyenidihiyideneciahseheoideheoenhsiheyesieetdyetehiyeneeemeseyiaeyemdyeyeeehecihidendyhsieehiaecenihieeoeoiaesesesoyaatpcsksctghisinjkcxinjkcxhsjtcxinjnhsioihcxjliycxgejlisjtcxgujninjyisdmoytpcsiajkihkstpcsiegtfpgsfeoytpcsimiehsjyihgajkjkkpihietpcssecyidisltlaoyaxlftpcstansghhdfzfxensogaceqzzctosesesgvtytgtkgbzfhfzlouecxmhchyllbjtbsdlzcvlgmgdbejzbdgyzctsnycyjswdsrhkrekphsbglppakngydkuebybbcnbtgttatkgmptttoyaatpcskscagthsieihcxidkkcxjyisihcxgujyhsjyihcxjliycxfekshsjnjojzihdmdlwnmntp"]},{"level":3,"anchor":"Tagged-CBOR-Binary","text":"Tagged CBOR Binary","type":"heading"},{"type":"codeListing","code":["d8c882d8c886d818d99c4c5820174842eac3fb44d7f626e4d79b7e107fd293c55629f6d622b81ed407770302c8a104d8187843546865205374617465206f66204578616d706c65207265636f676e697a6573204a4f484e20534d4954482061732061205065726d616e656e74205265736964656e742ea10d83d818d99c4c582004363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8a104d818781e49737375656420627920746865205374617465206f66204578616d706c65a109d818d820785f68747470733a2f2f6578616d706c656c65646765722e636f6d2f617269642f30343336336435666639393733336263306631353737626162613434306166316366333434616439653435346661643964313238633030666566363530356538a101d8186a63726564656e7469616ca10e8cd818d99c4c582078bc30004776a3905bccb9b8a032cf722ceaf0bbfb1a49eaf3185fab5808cadca1d8186c6269727468436f756e74727982d818626273a104d8186b54686520426168616d6173a1d8186a66616d696c794e616d65d81865534d495448a1d81869676976656e4e616d65d818644a4f484ea101d81866506572736f6ea101d818725065726d616e656e74205265736964656e74a1d8186b6c707243617465676f7279d81863433039a1d81869626972746844617465d818c11a07c56780a1d818696c70724e756d626572d8186b3939392d3939392d393939a1d8186d7265736964656e7453696e6365d818c11a5a516300a1d81865696d61676583d818d99c41582003b7adb0b6fa2fb6880a3b5fe08e0e37ae5e690bd5cc103de6f7954d408639c2a109d818786168747470733a2f2f6578616d706c656c65646765722e636f6d2f6469676573742f33366265333037323662656662363563613133623133366165323964383038316636343739326332373032343135656236306164316335366564333363393939a104d818781f5468697320697320616e20696d616765206f66204a6f686e20536d6974682ea1d81863736578d818644d414c45a1d8186a64617465497373756564d818c11a62688780a10382d818d99c5458404336c9491cb4fdcec1c1cae0f94d7b153f4088de209017f77f6e0f2ffde35250106c0b51fdd79a1a71eac359b575611285b17a5124de1114230d4dd9cf52a9d1a104d818781d4d61646520627920746865205374617465206f66204578616d706c652e"],"syntax":null},{"anchor":"Tagged-CBOR-Diagnostic-Notation","text":"Tagged CBOR Diagnostic Notation","level":3,"type":"heading"},{"syntax":null,"code":["200(   \/ envelope \/","   [","      200(   \/ envelope \/","         [","            24(   \/ leaf \/","               40012(   \/ arid \/","                  h'174842eac3fb44d7f626e4d79b7e107fd293c55629f6d622b81ed407770302c8'","               )","            ),","            {","               4:","               24(   \/ leaf \/","                  \"The State of Example recognizes JOHN SMITH as a Permanent Resident.\"","               )","            },","            {","               13:","               [","                  24(   \/ leaf \/","                     40012(   \/ arid \/","                        h'04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8'","                     )","                  ),","                  {","                     4:","                     24(   \/ leaf \/","                        \"Issued by the State of Example\"","                     )","                  },","                  {","                     9:","                     24(   \/ leaf \/","                        32(","                           \"https:\/\/exampleledger.com\/arid\/04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8\"","                        )","                     )","                  }","               ]","            },","            {","               1:","               24(\"credential\")   \/ leaf \/","            },","            {","               14:","               [","                  24(   \/ leaf \/","                     40012(   \/ arid \/","                        h'78bc30004776a3905bccb9b8a032cf722ceaf0bbfb1a49eaf3185fab5808cadc'","                     )","                  ),","                  {","                     24(\"birthCountry\"):   \/ leaf \/","                     [","                        24(\"bs\"),   \/ leaf \/","                        {","                           4:","                           24(\"The Bahamas\")   \/ leaf \/","                        }","                     ]","                  },","                  {","                     24(\"familyName\"):   \/ leaf \/","                     24(\"SMITH\")   \/ leaf \/","                  },","                  {","                     24(\"givenName\"):   \/ leaf \/","                     24(\"JOHN\")   \/ leaf \/","                  },","                  {","                     1:","                     24(\"Person\")   \/ leaf \/","                  },","                  {","                     1:","                     24(\"Permanent Resident\")   \/ leaf \/","                  },","                  {","                     24(\"lprCategory\"):   \/ leaf \/","                     24(\"C09\")   \/ leaf \/","                  },","                  {","                     24(\"birthDate\"):   \/ leaf \/","                     24(   \/ leaf \/","                        1(1974-02-18T00:00:00Z)","                     )","                  },","                  {","                     24(\"lprNumber\"):   \/ leaf \/","                     24(\"999-999-999\")   \/ leaf \/","                  },","                  {","                     24(\"residentSince\"):   \/ leaf \/","                     24(   \/ leaf \/","                        1(2018-01-07T00:00:00Z)","                     )","                  },","                  {","                     24(\"image\"):   \/ leaf \/","                     [","                        24(   \/ leaf \/","                           40001(   \/ digest \/","                              h'03b7adb0b6fa2fb6880a3b5fe08e0e37ae5e690bd5cc103de6f7954d408639c2'","                           )","                        ),","                        {","                           9:","                           24(   \/ leaf \/","                              \"https:\/\/exampleledger.com\/digest\/36be30726befb65ca13b136ae29d8081f64792c2702415eb60ad1c56ed33c999\"","                           )","                        },","                        {","                           4:","                           24(   \/ leaf \/","                              \"This is an image of John Smith.\"","                           )","                        }","                     ]","                  },","                  {","                     24(\"sex\"):   \/ leaf \/","                     24(\"MALE\")   \/ leaf \/","                  }","               ]","            },","            {","               24(\"dateIssued\"):   \/ leaf \/","               24(   \/ leaf \/","                  1(2022-04-27T00:00:00Z)","               )","            }","         ]","      ),","      {","         3:","         [","            24(   \/ leaf \/","               40020(   \/ signature \/","                  h'4336c9491cb4fdcec1c1cae0f94d7b153f4088de209017f77f6e0f2ffde35250106c0b51fdd79a1a71eac359b575611285b17a5124de1114230d4dd9cf52a9d1'","               )","            ),","            {","               4:","               24(   \/ leaf \/","                  \"Made by the State of Example.\"","               )","            }","         ]","      }","   ]",")"],"type":"codeListing"},{"anchor":"Tagged-CBOR-Annotated-Binary","level":3,"text":"Tagged CBOR Annotated Binary","type":"heading"},{"type":"codeListing","syntax":null,"code":["82                                       # array(2)","   d8 c8                                 # tag(200) envelope","      86                                 # array(6)","         d8 18                           # tag(24) leaf","            d9 9c4c                      # tag(40012) arid","               5820                      # bytes(32)","                  174842eac3fb44d7f626e4d79b7e107fd293c55629f6d622b81ed407770302c8","         a1                              # map(1)","            04                           # unsigned(4)","            d8 18                        # tag(24) leaf","               78 43                     # text(67)","                  546865205374617465206f66204578616d706c65207265636f676e697a6573204a4f484e20534d4954482061732061205065726d616e656e74205265736964656e742e # \"The State of Example recognizes JOHN SMITH as a Permanent Resident.\"","         a1                              # map(1)","            0d                           # unsigned(13)","            83                           # array(3)","               d8 18                     # tag(24) leaf","                  d9 9c4c                # tag(40012) arid","                     5820                # bytes(32)","                        04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8","               a1                        # map(1)","                  04                     # unsigned(4)","                  d8 18                  # tag(24) leaf","                     78 1e               # text(30)","                        49737375656420627920746865205374617465206f66204578616d706c65 # \"Issued by the State of Example\"","               a1                        # map(1)","                  09                     # unsigned(9)","                  d8 18                  # tag(24) leaf","                     d8 20               # tag(32)","                        78 5f            # text(95)","                           68747470733a2f2f6578616d706c656c65646765722e636f6d2f617269642f30343336336435666639393733336263306631353737626162613434306166316366333434616439653435346661643964313238633030666566363530356538 # \"https:\/\/exampleledger.com\/arid\/04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8\"","         a1                              # map(1)","            01                           # unsigned(1)","            d8 18                        # tag(24) leaf","               6a                        # text(10)","                  63726564656e7469616c   # \"credential\"","         a1                              # map(1)","            0e                           # unsigned(14)","            8c                           # array(12)","               d8 18                     # tag(24) leaf","                  d9 9c4c                # tag(40012) arid","                     5820                # bytes(32)","                        78bc30004776a3905bccb9b8a032cf722ceaf0bbfb1a49eaf3185fab5808cadc","               a1                        # map(1)","                  d8 18                  # tag(24) leaf","                     6c                  # text(12)","                        6269727468436f756e747279 # \"birthCountry\"","                  82                     # array(2)","                     d8 18               # tag(24) leaf","                        62               # text(2)","                           6273          # \"bs\"","                     a1                  # map(1)","                        04               # unsigned(4)","                        d8 18            # tag(24) leaf","                           6b            # text(11)","                              54686520426168616d6173 # \"The Bahamas\"","               a1                        # map(1)","                  d8 18                  # tag(24) leaf","                     6a                  # text(10)","                        66616d696c794e616d65 # \"familyName\"","                  d8 18                  # tag(24) leaf","                     65                  # text(5)","                        534d495448       # \"SMITH\"","               a1                        # map(1)","                  d8 18                  # tag(24) leaf","                     69                  # text(9)","                        676976656e4e616d65 # \"givenName\"","                  d8 18                  # tag(24) leaf","                     64                  # text(4)","                        4a4f484e         # \"JOHN\"","               a1                        # map(1)","                  01                     # unsigned(1)","                  d8 18                  # tag(24) leaf","                     66                  # text(6)","                        506572736f6e     # \"Person\"","               a1                        # map(1)","                  01                     # unsigned(1)","                  d8 18                  # tag(24) leaf","                     72                  # text(18)","                        5065726d616e656e74205265736964656e74 # \"Permanent Resident\"","               a1                        # map(1)","                  d8 18                  # tag(24) leaf","                     6b                  # text(11)","                        6c707243617465676f7279 # \"lprCategory\"","                  d8 18                  # tag(24) leaf","                     63                  # text(3)","                        433039           # \"C09\"","               a1                        # map(1)","                  d8 18                  # tag(24) leaf","                     69                  # text(9)","                        626972746844617465 # \"birthDate\"","                  d8 18                  # tag(24) leaf","                     c1                  # tag(1)","                        1a07c56780       # unsigned(130377600)","               a1                        # map(1)","                  d8 18                  # tag(24) leaf","                     69                  # text(9)","                        6c70724e756d626572 # \"lprNumber\"","                  d8 18                  # tag(24) leaf","                     6b                  # text(11)","                        3939392d3939392d393939 # \"999-999-999\"","               a1                        # map(1)","                  d8 18                  # tag(24) leaf","                     6d                  # text(13)","                        7265736964656e7453696e6365 # \"residentSince\"","                  d8 18                  # tag(24) leaf","                     c1                  # tag(1)","                        1a5a516300       # unsigned(1515283200)","               a1                        # map(1)","                  d8 18                  # tag(24) leaf","                     65                  # text(5)","                        696d616765       # \"image\"","                  83                     # array(3)","                     d8 18               # tag(24) leaf","                        d9 9c41          # tag(40001) digest","                           5820          # bytes(32)","                              03b7adb0b6fa2fb6880a3b5fe08e0e37ae5e690bd5cc103de6f7954d408639c2","                     a1                  # map(1)","                        09               # unsigned(9)","                        d8 18            # tag(24) leaf","                           78 61         # text(97)","                              68747470733a2f2f6578616d706c656c65646765722e636f6d2f6469676573742f33366265333037323662656662363563613133623133366165323964383038316636343739326332373032343135656236306164316335366564333363393939 # \"https:\/\/exampleledger.com\/digest\/36be30726befb65ca13b136ae29d8081f64792c2702415eb60ad1c56ed33c999\"","                     a1                  # map(1)","                        04               # unsigned(4)","                        d8 18            # tag(24) leaf","                           78 1f         # text(31)","                              5468697320697320616e20696d616765206f66204a6f686e20536d6974682e # \"This is an image of John Smith.\"","               a1                        # map(1)","                  d8 18                  # tag(24) leaf","                     63                  # text(3)","                        736578           # \"sex\"","                  d8 18                  # tag(24) leaf","                     64                  # text(4)","                        4d414c45         # \"MALE\"","         a1                              # map(1)","            d8 18                        # tag(24) leaf","               6a                        # text(10)","                  64617465497373756564   # \"dateIssued\"","            d8 18                        # tag(24) leaf","               c1                        # tag(1)","                  1a62688780             # unsigned(1651017600)","   a1                                    # map(1)","      03                                 # unsigned(3)","      82                                 # array(2)","         d8 18                           # tag(24) leaf","            d9 9c54                      # tag(40020) signature","               5840                      # bytes(64)","                  4336c9491cb4fdcec1c1cae0f94d7b153f4088de209017f77f6e0f2ffde35250106c0b51fdd79a1a71eac359b575611285b17a5124de1114230d4dd9cf52a9d1","         a1                              # map(1)","            04                           # unsigned(4)","            d8 18                        # tag(24) leaf","               78 1d                     # text(29)","                  4d61646520627920746865205374617465206f66204578616d706c652e # \"Made by the State of Example.\""]},{"type":"heading","anchor":"Test-Vector-10-Redacted-Verifiable-Credential","text":"Test Vector 10: Redacted Verifiable Credential","level":2},{"type":"paragraph","inlineContent":[{"text":"John wishes to identify himself to a third party using his government-issued credential, but does not wish to reveal more than his name, his photo, and the fact that the state has verified his identity. Despite redacting numerous fields, the overall digest of the elided structure is the same, and the signature still validates.","type":"text"}]},{"anchor":"Payload-in-Envelope-Notation","type":"heading","level":3,"text":"Payload in Envelope Notation"},{"type":"codeListing","syntax":null,"code":["{","    ARID(174842ea) [","        'isA': \"credential\"","        'holder': ARID(78bc3000) [","            \"familyName\": \"SMITH\"","            \"givenName\": \"JOHN\"","            \"image\": Digest(03b7adb0) [","                'dereferenceVia': \"https:\/\/exampleledger.com\/digest\/36be30726befb65ca13b136ae29d8081f64792c2702415eb60ad1c56ed33c999\"","                'note': \"This is an image of John Smith.\"","            ]","            ELIDED (8)","        ]","        'issuer': ARID(04363d5f) [","            'dereferenceVia': URI(https:\/\/exampleledger.com\/arid\/04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8)","            'note': \"Issued by the State of Example\"","        ]","        ELIDED (2)","    ]","} [","    'verifiedBy': Signature [","        'note': \"Made by the State of Example.\"","    ]","]"]},{"level":3,"type":"heading","anchor":"UR","text":"UR"},{"type":"paragraph","inlineContent":[{"text":"ðŸ‘‰ ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"text":" field serves this purpose.","type":"text"}]}]},{"syntax":null,"code":["ur:envelope\/lftpsplntpcstansgshdcxchfdfwwdsrzofytsyndsvetsndkbbelbtdmuskhfdtyntbcprocktyatktaxaosphdcxfnstoxfwdaglhlmywzpafwmnfdzezmkisgfhtaetihtibemedpnsuevswtcngwpaoybtlstpcstansgshdcxaaenfsheytmseorfbsbzktrdrdfybkwntkeegetaveghzstattdertbswsihahvsoyaatpcsksckgajkjkkpihiecxidkkcxjyisihcxgujyhsjyihcxjliycxfekshsjnjojzihoyastpcstpcxksheisjyjyjojkftdldlihkshsjnjojzihjzihieioihjpdmiajljndlhsjpiniedldyeeeoeneoieeciyiyesesemeoeoidiadyiyehecememidhsidhseeeedyhsiyehiaiyeoeeeehsieesiheeeceeiyhsieesieeheyetiadydyiyihiyenecdyecihetoyadtpcsimiajpihieihjtjyinhsjzoybalktpcstansgshdcxksrfdyaeflkootmhhpsfrhronbeytkjpdwwdwtrkzocygawdwfcshepyhdaysguohdcxbwjsinwkcmahnefdmsfdgtltkpdppdbdwnfdhhwfjyptvddimucwrycavameetssoytpcsimiyhsjninjzkkglhsjnihtpcsihgugtgaghfdoytpcsinioinkoihjtglhsjnihtpcsiegegwfdglhdcxhdcamnzeftfppdwzpmjojluypebnbeplzeptzesfkgfholssdtkgveimonnlsosehdcxjscnletijkdssosnvljpbklrhpihrpjtfwtnwecflolsolfmkbnlndosmdadztsbhdcxnsmkylvtfseegsgotaammhcezebdgwhyhhyljkrhwfqzoskgeosodsgmpmhgzchhhdcxosfmfplpfxvefzoybncfwzgtfewdcapsqdkkuolagdtdltvwfdttvorflocwzegahdcxtbcffdrptpstzmmomdktssmegedwvdecgadtdsreaygtdifwmokimwaodwbyuozmhdcxvyidloaagdetmopfrnbwleidmeioftfptavtlnptprvohnfpmtcegdseamceotwyoytpcsihinjnhsioihlstpcstansfphdcxaxrlpmpfrpzsdlrplobkfrhevtmnbaemplhyinbdtlsfbefsvaylmdgtfzlnessaoyastpcskshsisjyjyjojkftdldlihkshsjnjojzihjzihieioihjpdmiajljndlieinioihjkjydleoenidiheodyemeyenidihiyideneciahseheoideheoenhsiheyesieetdyetehiyeneeemeseyiaeyemdyeyeeehecihidendyhsieehiaecenihieeoeoiaesesesoyaatpcsksctghisinjkcxinjkcxhsjtcxinjnhsioihcxjliycxgejlisjtcxgujninjyisdmhdcxzejocerptnaxchswvossceasnehkgefyptmhndretdghwtwepymwoyrocmnntddihdcxwmesosbwlupscfiopltaemchmdzmtllrgraxlnrhwnkbfmlrveadrtlobspspmmsoyaxlftpcstansghhdfzfxensogaceqzzctosesesgvtytgtkgbzfhfzlouecxmhchyllbjtbsdlzcvlgmgdbejzbdgyzctsnycyjswdsrhkrekphsbglppakngydkuebybbcnbtgttatkgmptttoyaatpcskscagthsieihcxidkkcxjyisihcxgujyhsjyihcxjliycxfekshsjnjojzihdmsgftgegd"],"type":"codeListing"},{"text":"Tagged CBOR Binary","level":3,"anchor":"Tagged-CBOR-Binary","type":"heading"},{"type":"codeListing","code":["d8c882d8c886d818d99c4c5820174842eac3fb44d7f626e4d79b7e107fd293c55629f6d622b81ed407770302c858203cc7a442254e5d8ff2b1428e48feff7dca3fd93865d010912d9cdee8f0234fb1a10d83d818d99c4c582004363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8a104d818781e49737375656420627920746865205374617465206f66204578616d706c65a109d818d820785f68747470733a2f2f6578616d706c656c65646765722e636f6d2f617269642f30343336336435666639393733336263306631353737626162613434306166316366333434616439653435346661643964313238633030666566363530356538a101d8186a63726564656e7469616ca10e8cd818d99c4c582078bc30004776a3905bccb9b8a032cf722ceaf0bbfb1a49eaf3185fab5808cadc5820137169f416059f4897484d87752da80bf1485cf374a9e727931bbd1de69138c4a1d8186a66616d696c794e616d65d81865534d495448a1d81869676976656e4e616d65d818644a4f484e5820581d8efe3a41a8f2ad706fdbaf0c10aefea9fecc7b3fa6c4297be46aa599c9c1582071238ad07326c9cde3720a845b65b66e42daed198883a63e7e999ba79501fccb58209c98f7e03d344c55d906901cfe0b4f5e5cf773b9f3b4a77b33c92652ad57fd5c5820a73e418543e440a10c19f24d45ea1dacb379dc8050d287e548d1e2bc881bfe495820d61948b6d8c7ff929577c4914a2ce735492926b5084d2742927d94022c11dcff5820e1628804503892b0be138a6291673a41d9e086a9b2e26041961c50c1061ca3eea1d81865696d61676583d818d99c41582003b7adb0b6fa2fb6880a3b5fe08e0e37ae5e690bd5cc103de6f7954d408639c2a109d818786168747470733a2f2f6578616d706c656c65646765722e636f6d2f6469676573742f33366265333037323662656662363563613133623133366165323964383038316636343739326332373032343135656236306164316335366564333363393939a104d818781f5468697320697320616e20696d616765206f66204a6f686e20536d6974682e5820fe701cb6da0317c6e2c41c099f594a44a9909bb5d254f0edab94a1b8169ed2275820eb39a7138bac1967aed9371795ffd5844b0386b9f17e3e84e401c0880facad97a10382d818d99c5458404336c9491cb4fdcec1c1cae0f94d7b153f4088de209017f77f6e0f2ffde35250106c0b51fdd79a1a71eac359b575611285b17a5124de1114230d4dd9cf52a9d1a104d818781d4d61646520627920746865205374617465206f66204578616d706c652e"],"syntax":null},{"anchor":"Tagged-CBOR-Diagnostic-Notation","text":"Tagged CBOR Diagnostic Notation","type":"heading","level":3},{"syntax":null,"code":["200(   \/ envelope \/","   [","      200(   \/ envelope \/","         [","            24(   \/ leaf \/","               40012(   \/ arid \/","                  h'174842eac3fb44d7f626e4d79b7e107fd293c55629f6d622b81ed407770302c8'","               )","            ),","            h'3cc7a442254e5d8ff2b1428e48feff7dca3fd93865d010912d9cdee8f0234fb1',","            {","               13:","               [","                  24(   \/ leaf \/","                     40012(   \/ arid \/","                        h'04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8'","                     )","                  ),","                  {","                     4:","                     24(   \/ leaf \/","                        \"Issued by the State of Example\"","                     )","                  },","                  {","                     9:","                     24(   \/ leaf \/","                        32(","                           \"https:\/\/exampleledger.com\/arid\/04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8\"","                        )","                     )","                  }","               ]","            },","            {","               1:","               24(\"credential\")   \/ leaf \/","            },","            {","               14:","               [","                  24(   \/ leaf \/","                     40012(   \/ arid \/","                        h'78bc30004776a3905bccb9b8a032cf722ceaf0bbfb1a49eaf3185fab5808cadc'","                     )","                  ),","                  h'137169f416059f4897484d87752da80bf1485cf374a9e727931bbd1de69138c4',","                  {","                     24(\"familyName\"):   \/ leaf \/","                     24(\"SMITH\")   \/ leaf \/","                  },","                  {","                     24(\"givenName\"):   \/ leaf \/","                     24(\"JOHN\")   \/ leaf \/","                  },","                  h'581d8efe3a41a8f2ad706fdbaf0c10aefea9fecc7b3fa6c4297be46aa599c9c1',","                  h'71238ad07326c9cde3720a845b65b66e42daed198883a63e7e999ba79501fccb',","                  h'9c98f7e03d344c55d906901cfe0b4f5e5cf773b9f3b4a77b33c92652ad57fd5c',","                  h'a73e418543e440a10c19f24d45ea1dacb379dc8050d287e548d1e2bc881bfe49',","                  h'd61948b6d8c7ff929577c4914a2ce735492926b5084d2742927d94022c11dcff',","                  h'e1628804503892b0be138a6291673a41d9e086a9b2e26041961c50c1061ca3ee',","                  {","                     24(\"image\"):   \/ leaf \/","                     [","                        24(   \/ leaf \/","                           40001(   \/ digest \/","                              h'03b7adb0b6fa2fb6880a3b5fe08e0e37ae5e690bd5cc103de6f7954d408639c2'","                           )","                        ),","                        {","                           9:","                           24(   \/ leaf \/","                              \"https:\/\/exampleledger.com\/digest\/36be30726befb65ca13b136ae29d8081f64792c2702415eb60ad1c56ed33c999\"","                           )","                        },","                        {","                           4:","                           24(   \/ leaf \/","                              \"This is an image of John Smith.\"","                           )","                        }","                     ]","                  },","                  h'fe701cb6da0317c6e2c41c099f594a44a9909bb5d254f0edab94a1b8169ed227'","               ]","            },","            h'eb39a7138bac1967aed9371795ffd5844b0386b9f17e3e84e401c0880facad97'","         ]","      ),","      {","         3:","         [","            24(   \/ leaf \/","               40020(   \/ signature \/","                  h'4336c9491cb4fdcec1c1cae0f94d7b153f4088de209017f77f6e0f2ffde35250106c0b51fdd79a1a71eac359b575611285b17a5124de1114230d4dd9cf52a9d1'","               )","            ),","            {","               4:","               24(   \/ leaf \/","                  \"Made by the State of Example.\"","               )","            }","         ]","      }","   ]",")"],"type":"codeListing"},{"type":"heading","anchor":"Tagged-CBOR-Annotated-Binary","level":3,"text":"Tagged CBOR Annotated Binary"},{"type":"codeListing","syntax":null,"code":["82                                       # array(2)","   d8 c8                                 # tag(200) envelope","      86                                 # array(6)","         d8 18                           # tag(24) leaf","            d9 9c4c                      # tag(40012) arid","               5820                      # bytes(32)","                  174842eac3fb44d7f626e4d79b7e107fd293c55629f6d622b81ed407770302c8","         5820                            # bytes(32)","            3cc7a442254e5d8ff2b1428e48feff7dca3fd93865d010912d9cdee8f0234fb1","         a1                              # map(1)","            0d                           # unsigned(13)","            83                           # array(3)","               d8 18                     # tag(24) leaf","                  d9 9c4c                # tag(40012) arid","                     5820                # bytes(32)","                        04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8","               a1                        # map(1)","                  04                     # unsigned(4)","                  d8 18                  # tag(24) leaf","                     78 1e               # text(30)","                        49737375656420627920746865205374617465206f66204578616d706c65 # \"Issued by the State of Example\"","               a1                        # map(1)","                  09                     # unsigned(9)","                  d8 18                  # tag(24) leaf","                     d8 20               # tag(32)","                        78 5f            # text(95)","                           68747470733a2f2f6578616d706c656c65646765722e636f6d2f617269642f30343336336435666639393733336263306631353737626162613434306166316366333434616439653435346661643964313238633030666566363530356538 # \"https:\/\/exampleledger.com\/arid\/04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8\"","         a1                              # map(1)","            01                           # unsigned(1)","            d8 18                        # tag(24) leaf","               6a                        # text(10)","                  63726564656e7469616c   # \"credential\"","         a1                              # map(1)","            0e                           # unsigned(14)","            8c                           # array(12)","               d8 18                     # tag(24) leaf","                  d9 9c4c                # tag(40012) arid","                     5820                # bytes(32)","                        78bc30004776a3905bccb9b8a032cf722ceaf0bbfb1a49eaf3185fab5808cadc","               5820                      # bytes(32)","                  137169f416059f4897484d87752da80bf1485cf374a9e727931bbd1de69138c4","               a1                        # map(1)","                  d8 18                  # tag(24) leaf","                     6a                  # text(10)","                        66616d696c794e616d65 # \"familyName\"","                  d8 18                  # tag(24) leaf","                     65                  # text(5)","                        534d495448       # \"SMITH\"","               a1                        # map(1)","                  d8 18                  # tag(24) leaf","                     69                  # text(9)","                        676976656e4e616d65 # \"givenName\"","                  d8 18                  # tag(24) leaf","                     64                  # text(4)","                        4a4f484e         # \"JOHN\"","               5820                      # bytes(32)","                  581d8efe3a41a8f2ad706fdbaf0c10aefea9fecc7b3fa6c4297be46aa599c9c1","               5820                      # bytes(32)","                  71238ad07326c9cde3720a845b65b66e42daed198883a63e7e999ba79501fccb","               5820                      # bytes(32)","                  9c98f7e03d344c55d906901cfe0b4f5e5cf773b9f3b4a77b33c92652ad57fd5c","               5820                      # bytes(32)","                  a73e418543e440a10c19f24d45ea1dacb379dc8050d287e548d1e2bc881bfe49","               5820                      # bytes(32)","                  d61948b6d8c7ff929577c4914a2ce735492926b5084d2742927d94022c11dcff","               5820                      # bytes(32)","                  e1628804503892b0be138a6291673a41d9e086a9b2e26041961c50c1061ca3ee","               a1                        # map(1)","                  d8 18                  # tag(24) leaf","                     65                  # text(5)","                        696d616765       # \"image\"","                  83                     # array(3)","                     d8 18               # tag(24) leaf","                        d9 9c41          # tag(40001) digest","                           5820          # bytes(32)","                              03b7adb0b6fa2fb6880a3b5fe08e0e37ae5e690bd5cc103de6f7954d408639c2","                     a1                  # map(1)","                        09               # unsigned(9)","                        d8 18            # tag(24) leaf","                           78 61         # text(97)","                              68747470733a2f2f6578616d706c656c65646765722e636f6d2f6469676573742f33366265333037323662656662363563613133623133366165323964383038316636343739326332373032343135656236306164316335366564333363393939 # \"https:\/\/exampleledger.com\/digest\/36be30726befb65ca13b136ae29d8081f64792c2702415eb60ad1c56ed33c999\"","                     a1                  # map(1)","                        04               # unsigned(4)","                        d8 18            # tag(24) leaf","                           78 1f         # text(31)","                              5468697320697320616e20696d616765206f66204a6f686e20536d6974682e # \"This is an image of John Smith.\"","               5820                      # bytes(32)","                  fe701cb6da0317c6e2c41c099f594a44a9909bb5d254f0edab94a1b8169ed227","         5820                            # bytes(32)","            eb39a7138bac1967aed9371795ffd5844b0386b9f17e3e84e401c0880facad97","   a1                                    # map(1)","      03                                 # unsigned(3)","      82                                 # array(2)","         d8 18                           # tag(24) leaf","            d9 9c54                      # tag(40020) signature","               5840                      # bytes(64)","                  4336c9491cb4fdcec1c1cae0f94d7b153f4088de209017f77f6e0f2ffde35250106c0b51fdd79a1a71eac359b575611285b17a5124de1114230d4dd9cf52a9d1","         a1                              # map(1)","            04                           # unsigned(4)","            d8 18                        # tag(24) leaf","               78 1d                     # text(29)","                  4d61646520627920746865205374617465206f66204578616d706c652e # \"Made by the State of Example.\""]}]}],"references":{"doc://Envelope/documentation/Envelope/SSKRTestVectors":{"type":"topic","abstract":[],"role":"article","url":"\/documentation\/envelope\/sskrtestvectors","identifier":"doc:\/\/Envelope\/documentation\/Envelope\/SSKRTestVectors","title":"SSKR Test Vectors","kind":"article"},"#Test-Vector-7-MultiRecipient":{"title":"Multi-Recipient","type":"link","url":"#Test-Vector-7-MultiRecipient","titleInlineContent":[{"text":"Multi-Recipient","type":"text"}],"identifier":"#Test-Vector-7-MultiRecipient"},"#Test-Vector-1-Hello-World":{"url":"#Test-Vector-1-Hello-World","type":"link","title":"Hello, World!","identifier":"#Test-Vector-1-Hello-World","titleInlineContent":[{"text":"Hello, World!","type":"text"}]},"#Test-Vector-6-Encrypt-Then-Sign":{"title":"Encrypt Then Sign","type":"link","url":"#Test-Vector-6-Encrypt-Then-Sign","titleInlineContent":[{"text":"Encrypt Then Sign","type":"text"}],"identifier":"#Test-Vector-6-Encrypt-Then-Sign"},"#Test-Vector-8-Visible-Signature-MultiRecipient":{"titleInlineContent":[{"text":"Visible Signature Multi-Recipient","type":"text"}],"title":"Visible Signature Multi-Recipient","identifier":"#Test-Vector-8-Visible-Signature-MultiRecipient","type":"link","url":"#Test-Vector-8-Visible-Signature-MultiRecipient"},"#Test-Vector-2-Signed-Plaintext":{"title":"Signed Plaintext","type":"link","url":"#Test-Vector-2-Signed-Plaintext","titleInlineContent":[{"text":"Signed Plaintext","type":"text"}],"identifier":"#Test-Vector-2-Signed-Plaintext"},"#Test-Vector-3-Multisigned-Plaintext":{"titleInlineContent":[{"text":"Multisigned Plaintext","type":"text"}],"title":"Multisigned Plaintext","identifier":"#Test-Vector-3-Multisigned-Plaintext","type":"link","url":"#Test-Vector-3-Multisigned-Plaintext"},"doc://Envelope/documentation/Envelope":{"url":"\/documentation\/envelope","kind":"symbol","title":"Envelope","role":"collection","identifier":"doc:\/\/Envelope\/documentation\/Envelope","type":"topic","abstract":[{"type":"text","text":"Gordian Envelope: A flexible container for structured data."}]},"#Test-Vector-5-Sign-Then-Encrypt":{"title":"Sign Then Encrypt","type":"link","url":"#Test-Vector-5-Sign-Then-Encrypt","titleInlineContent":[{"text":"Sign Then Encrypt","type":"text"}],"identifier":"#Test-Vector-5-Sign-Then-Encrypt"},"#Test-Vector-10-Redacted-Verifiable-Credential":{"titleInlineContent":[{"text":"Redacted Verifiable Credential","type":"text"}],"title":"Redacted Verifiable Credential","identifier":"#Test-Vector-10-Redacted-Verifiable-Credential","type":"link","url":"#Test-Vector-10-Redacted-Verifiable-Credential"},"#Test-Vector-9-Verifiable-Credential":{"title":"Verifiable Credential","type":"link","url":"#Test-Vector-9-Verifiable-Credential","titleInlineContent":[{"text":"Verifiable Credential","type":"text"}],"identifier":"#Test-Vector-9-Verifiable-Credential"},"#Test-Vector-4-Symmetric-Encryption":{"titleInlineContent":[{"text":"Symmetric Encryption","type":"text"}],"title":"Symmetric Encryption","identifier":"#Test-Vector-4-Symmetric-Encryption","type":"link","url":"#Test-Vector-4-Symmetric-Encryption"}}}