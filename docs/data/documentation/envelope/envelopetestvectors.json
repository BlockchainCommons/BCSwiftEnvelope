{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This document provides test vectors for "},{"type":"codeVoice","code":"envelope"},{"type":"text","text":". It is generated by "},{"type":"codeVoice","code":"EnvelopeTestVectors.testGenerateEnvelopeTestVectors()"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"BCSwiftEnvelope"},{"type":"text","text":" test suite."}]},{"anchor":"Status","level":2,"type":"heading","text":"Status"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Draft, with a reference implementation in this package."}]},{"anchor":"Constant-Test-Data","level":2,"type":"heading","text":"Constant Test Data"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These test vectors use these fixed seed values, from which other key pairs are derived:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Aliceâ€™s Seed: "},{"type":"codeVoice","code":"82f32c855d3d542256180810797e0073"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Bobâ€™s Seed: "},{"type":"codeVoice","code":"187a5973c64d359c836eba466a44db7b"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Carolâ€™s Seed: "},{"type":"codeVoice","code":"8574afab18e229651c1be8f76ffee523"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"These objects are normally random, but they are fixed for these test vectors:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Symmetric key used for encryption: "},{"type":"codeVoice","code":"526afd95b2229c5381baec4a1788507a3c4a566ca5cce64543b46ad12aff0035"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Nonce for encryption: "},{"type":"codeVoice","code":"4d785658f36c22fb5aed3ac0"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Random generator for signing returns pseudorandom sequence beginning: "},{"type":"codeVoice","code":"7eb559bbbf6cce2632cf9f194aeb50943de7e1cbad54dcfab27a42759f5e2fed518684c556472008a67932f7c682125b50cb72e8216f6906358fdaf28d3545532daee0c5bb5023f50cd8e71ec14901ac746c576c481b893be6656b80622b3a564e59b4e2"}]}]}]},{"anchor":"Contents","level":2,"type":"heading","text":"Contents"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#Test-Vector-1-Hello-World"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#Test-Vector-2-Signed-Plaintext"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#Test-Vector-3-Multisigned-Plaintext"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#Test-Vector-4-Symmetric-Encryption"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#Test-Vector-5-Sign-Then-Encrypt"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#Test-Vector-6-Encrypt-Then-Sign"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#Test-Vector-7-MultiRecipient"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#Test-Vector-8-Visible-Signature-MultiRecipient"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#Test-Vector-9-Verifiable-Credential"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#Test-Vector-10-Redacted-Verifiable-Credential"}]}]}]},{"anchor":"Test-Vector-1-Hello-World","level":2,"type":"heading","text":"Test Vector 1: Hello, World!"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The simplest case: encoding a plaintext string as the envelopeâ€™s "},{"type":"codeVoice","code":"subject"},{"type":"text","text":". The "},{"type":"codeVoice","code":"subject"},{"type":"text","text":" can be any CBOR-encodable structure."}]},{"anchor":"Payload-in-Envelope-Notation","level":3,"type":"heading","text":"Payload in Envelope Notation"},{"type":"codeListing","syntax":null,"code":["\"Hello.\""]},{"anchor":"UR","level":3,"type":"heading","text":"UR"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"type":"emphasis","inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field serves this purpose."}]}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/tpcsiyfdihjzjzjldmprrhtypk"]},{"anchor":"Tagged-CBOR-Binary","level":3,"type":"heading","text":"Tagged CBOR Binary"},{"type":"codeListing","syntax":null,"code":["d8c8d8186648656c6c6f2e"]},{"anchor":"Tagged-CBOR-Diagnostic-Notation","level":3,"type":"heading","text":"Tagged CBOR Diagnostic Notation"},{"type":"codeListing","syntax":null,"code":["200(   ; envelope","   24(\"Hello.\")   ; leaf",")"]},{"anchor":"Tagged-CBOR-Annotated-Binary","level":3,"type":"heading","text":"Tagged CBOR Annotated Binary"},{"type":"codeListing","syntax":null,"code":["d8 c8                 # tag(200)   ; envelope","   d8 18              # tag(24)   ; leaf","      66              # text(6)","         48656c6c6f2e # \"Hello.\""]},{"anchor":"Test-Vector-2-Signed-Plaintext","level":2,"type":"heading","text":"Test Vector 2: Signed Plaintext"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A string has been signed by Alice."}]},{"anchor":"Payload-in-Envelope-Notation","level":3,"type":"heading","text":"Payload in Envelope Notation"},{"type":"codeListing","syntax":null,"code":["\"Hello.\" [","    verifiedBy: Signature","]"]},{"anchor":"UR","level":3,"type":"heading","text":"UR"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"type":"emphasis","inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field serves this purpose."}]}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/lftpsptpcsiyfdihjzjzjldmtpsptputlftpsptpuraxtpsptpcstpuehdfzsgmwsklyeezodydmrfyasblajlbdmhgujyjnsradtojnplpsclnednhgnlclihfdkbfrcslstlknperlnlioeohspdonadfdlaykfnssfmfmwzflgmsefsbahydnssdatkbsrntb"]},{"anchor":"Tagged-CBOR-Binary","level":3,"type":"heading","text":"Tagged CBOR Binary"},{"type":"codeListing","syntax":null,"code":["d8c882d8c8d8186648656c6c6f2ed8c8d8dd82d8c8d8df03d8c8d818d8de5840ca94c58134fb302ebcf8cb806f0b9053746dc301ce6daeac219f2b57992165487e3b1883d57aafb799673361a8a5014880f53cc43e3ef24752c13d0e5e2bc425"]},{"anchor":"Tagged-CBOR-Diagnostic-Notation","level":3,"type":"heading","text":"Tagged CBOR Diagnostic Notation"},{"type":"codeListing","syntax":null,"code":["200(   ; envelope","   [","      200(   ; envelope","         24(\"Hello.\")   ; leaf","      ),","      200(   ; envelope","         221(   ; assertion","            [","               200(   ; envelope","                  223(3)   ; known-value","               ),","               200(   ; envelope","                  24(   ; leaf","                     222(   ; signature","                        h'ca94c58134fb302ebcf8cb806f0b9053746dc301ce6daeac219f2b57992165487e3b1883d57aafb799673361a8a5014880f53cc43e3ef24752c13d0e5e2bc425'","                     )","                  )","               )","            ]","         )","      )","   ]",")"]},{"anchor":"Tagged-CBOR-Annotated-Binary","level":3,"type":"heading","text":"Tagged CBOR Annotated Binary"},{"type":"codeListing","syntax":null,"code":["d8 c8                                    # tag(200)   ; envelope","   82                                    # array(2)","      d8 c8                              # tag(200)   ; envelope","         d8 18                           # tag(24)   ; leaf","            66                           # text(6)","               48656c6c6f2e              # \"Hello.\"","      d8 c8                              # tag(200)   ; envelope","         d8 dd                           # tag(221)   ; assertion","            82                           # array(2)","               d8 c8                     # tag(200)   ; envelope","                  d8 df                  # tag(223)   ; known-value","                     03                  # unsigned(3)","               d8 c8                     # tag(200)   ; envelope","                  d8 18                  # tag(24)   ; leaf","                     d8 de               # tag(222)   ; signature","                        5840             # bytes(64)","                           ca94c58134fb302ebcf8cb806f0b9053746dc301ce6daeac219f2b57992165487e3b1883d57aafb799673361a8a5014880f53cc43e3ef24752c13d0e5e2bc425"]},{"anchor":"Test-Vector-3-Multisigned-Plaintext","level":2,"type":"heading","text":"Test Vector 3: Multisigned Plaintext"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alice and Carol jointly send a signed plaintext message to Bob."}]},{"anchor":"Payload-in-Envelope-Notation","level":3,"type":"heading","text":"Payload in Envelope Notation"},{"type":"codeListing","syntax":null,"code":["\"Hello.\" [","    verifiedBy: Signature","    verifiedBy: Signature","]"]},{"anchor":"UR","level":3,"type":"heading","text":"UR"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"type":"emphasis","inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field serves this purpose."}]}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/lstpsptpcsiyfdihjzjzjldmtpsptputlftpsptpuraxtpsptpcstpuehdfzinotnyuewefhplchzsvodycfsoluidpyfmksbgdnidcygohfaduywnpyyawpcpdlfpcyntcfeowfkotnwlvwsofpmocyluvaonrepkjptlhgbzengwdssrgyfmfzcknltpsptputlftpsptpuraxtpsptpcstpuehdfzsgmwsklyeezodydmrfyasblajlbdmhgujyjnsradtojnplpsclnednhgnlclihfdkbfrcslstlknperlnlioeohspdonadfdlaykfnssfmfmwzflgmsefsbahydnssdadinbmhto"]},{"anchor":"Tagged-CBOR-Binary","level":3,"type":"heading","text":"Tagged CBOR Binary"},{"type":"codeListing","syntax":null,"code":["d8c883d8c8d8186648656c6c6f2ed8c8d8dd82d8c8d8df03d8c8d818d8de584069a39adeed3fae17fae23019c98b62ab3e78122b621a555601dbf1abf8ec222f411a9d1933f376dae9e5c941921a8be6a5b5aa72d55715364f26c3513e401e99d8c8d8dd82d8c8d8df03d8c8d818d8de5840ca94c58134fb302ebcf8cb806f0b9053746dc301ce6daeac219f2b57992165487e3b1883d57aafb799673361a8a5014880f53cc43e3ef24752c13d0e5e2bc425"]},{"anchor":"Tagged-CBOR-Diagnostic-Notation","level":3,"type":"heading","text":"Tagged CBOR Diagnostic Notation"},{"type":"codeListing","syntax":null,"code":["200(   ; envelope","   [","      200(   ; envelope","         24(\"Hello.\")   ; leaf","      ),","      200(   ; envelope","         221(   ; assertion","            [","               200(   ; envelope","                  223(3)   ; known-value","               ),","               200(   ; envelope","                  24(   ; leaf","                     222(   ; signature","                        h'69a39adeed3fae17fae23019c98b62ab3e78122b621a555601dbf1abf8ec222f411a9d1933f376dae9e5c941921a8be6a5b5aa72d55715364f26c3513e401e99'","                     )","                  )","               )","            ]","         )","      ),","      200(   ; envelope","         221(   ; assertion","            [","               200(   ; envelope","                  223(3)   ; known-value","               ),","               200(   ; envelope","                  24(   ; leaf","                     222(   ; signature","                        h'ca94c58134fb302ebcf8cb806f0b9053746dc301ce6daeac219f2b57992165487e3b1883d57aafb799673361a8a5014880f53cc43e3ef24752c13d0e5e2bc425'","                     )","                  )","               )","            ]","         )","      )","   ]",")"]},{"anchor":"Tagged-CBOR-Annotated-Binary","level":3,"type":"heading","text":"Tagged CBOR Annotated Binary"},{"type":"codeListing","syntax":null,"code":["d8 c8                                    # tag(200)   ; envelope","   83                                    # array(3)","      d8 c8                              # tag(200)   ; envelope","         d8 18                           # tag(24)   ; leaf","            66                           # text(6)","               48656c6c6f2e              # \"Hello.\"","      d8 c8                              # tag(200)   ; envelope","         d8 dd                           # tag(221)   ; assertion","            82                           # array(2)","               d8 c8                     # tag(200)   ; envelope","                  d8 df                  # tag(223)   ; known-value","                     03                  # unsigned(3)","               d8 c8                     # tag(200)   ; envelope","                  d8 18                  # tag(24)   ; leaf","                     d8 de               # tag(222)   ; signature","                        5840             # bytes(64)","                           69a39adeed3fae17fae23019c98b62ab3e78122b621a555601dbf1abf8ec222f411a9d1933f376dae9e5c941921a8be6a5b5aa72d55715364f26c3513e401e99","      d8 c8                              # tag(200)   ; envelope","         d8 dd                           # tag(221)   ; assertion","            82                           # array(2)","               d8 c8                     # tag(200)   ; envelope","                  d8 df                  # tag(223)   ; known-value","                     03                  # unsigned(3)","               d8 c8                     # tag(200)   ; envelope","                  d8 18                  # tag(24)   ; leaf","                     d8 de               # tag(222)   ; signature","                        5840             # bytes(64)","                           ca94c58134fb302ebcf8cb806f0b9053746dc301ce6daeac219f2b57992165487e3b1883d57aafb799673361a8a5014880f53cc43e3ef24752c13d0e5e2bc425"]},{"anchor":"Test-Vector-4-Symmetric-Encryption","level":2,"type":"heading","text":"Test Vector 4: Symmetric Encryption"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alice and Bob have agreed to use a symmetric key."}]},{"anchor":"Payload-in-Envelope-Notation","level":3,"type":"heading","text":"Payload in Envelope Notation"},{"type":"codeListing","syntax":null,"code":["ENCRYPTED"]},{"anchor":"UR","level":3,"type":"heading","text":"UR"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"type":"emphasis","inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field serves this purpose."}]}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/tpsolrgaashhpmtdnshpvssocmgsgtkshfhdwfjzcpzohtweftrtgdtnayfthdeskofyrydesgqdseimsbnldlhddktpsbhdcxlksojzuyktbykovsecbygebsldeninbdfptkwebtwzdpadglwetbgltnwdmwhlhkhhlkrdge"]},{"anchor":"Tagged-CBOR-Binary","level":3,"type":"heading","text":"Tagged CBOR Binary"},{"type":"codeListing","syntax":null,"code":["d8c8d8c98449095cadd29c5be8c9164c4d785658f36c22fb5aed3ac050da083a58397644bd28cab3c16acb992f5824d8cb58208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59"]},{"anchor":"Tagged-CBOR-Diagnostic-Notation","level":3,"type":"heading","text":"Tagged CBOR Diagnostic Notation"},{"type":"codeListing","syntax":null,"code":["200(   ; envelope","   201(   ; crypto-msg","      [","         h'095cadd29c5be8c916',","         h'4d785658f36c22fb5aed3ac0',","         h'da083a58397644bd28cab3c16acb992f',","         h'd8cb58208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59'","      ]","   )",")"]},{"anchor":"Tagged-CBOR-Annotated-Binary","level":3,"type":"heading","text":"Tagged CBOR Annotated Binary"},{"type":"codeListing","syntax":null,"code":["d8 c8                                    # tag(200)   ; envelope","   d8 c9                                 # tag(201)   ; crypto-msg","      84                                 # array(4)","         49                              # bytes(9)","            095cadd29c5be8c916","         4c                              # bytes(12)","            4d785658f36c22fb5aed3ac0","         50                              # bytes(16)","            da083a58397644bd28cab3c16acb992f","         5824                            # bytes(36)","            d8cb58208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59"]},{"anchor":"Test-Vector-5-Sign-Then-Encrypt","level":2,"type":"heading","text":"Test Vector 5: Sign Then Encrypt"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A message is first signed, then encrypted. Its signature can only be checked once the envelope is decrypted."}]},{"anchor":"Payload-in-Envelope-Notation","level":3,"type":"heading","text":"Payload in Envelope Notation"},{"type":"codeListing","syntax":null,"code":["ENCRYPTED"]},{"anchor":"UR","level":3,"type":"heading","text":"UR"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"type":"emphasis","inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field serves this purpose."}]}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/tpsolrhdhnasoxgafwehwsnsrtjolbfwmolkehhgkpghwlynplspcpkevoynksosaahefmlsfpjsfeidosdagdjotltpvlcxdwotneahjywkahiospmobeskzsbzdmytntkghkehisttrtbnzmroiyvwgtwektmdvldlwkfphywmmutnkgtirpqzlujshpayjtrlneoefpgsgtkshfhdwfjzcpzohtweftrtgdctwlsbrtatolsecldrgrsedlmukgbkemhddktpsbhdcxhsaossteadwmcwweswsppdhyiegsflptetfdamswpllsbkutcwwzaxtbgwlrfwfrlutngerh"]},{"anchor":"Tagged-CBOR-Binary","level":3,"type":"heading","text":"Tagged CBOR Binary"},{"type":"codeListing","syntax":null,"code":["d8c8d8c984586009a4494231ef9cc0707f42928c31577554e9f6aec8227ce2f678a7045f3e8341714562a7255070d5d8e3202ca39f0574f40567c89210c5fa152ef99d7b593168d1c00cffb866e54ded7795e32ff4415eeb93da7bd0b6b48b715b086eb79fa2414c4d785658f36c22fb5aed3ac0501fe9cbc007a6c1212a4bc12f937b0a375824d8cb58206102c4d301eb1bedc6c8a85e644c47a9384806c6ae830add1bf203d64f84423b"]},{"anchor":"Tagged-CBOR-Diagnostic-Notation","level":3,"type":"heading","text":"Tagged CBOR Diagnostic Notation"},{"type":"codeListing","syntax":null,"code":["200(   ; envelope","   201(   ; crypto-msg","      [","         h'09a4494231ef9cc0707f42928c31577554e9f6aec8227ce2f678a7045f3e8341714562a7255070d5d8e3202ca39f0574f40567c89210c5fa152ef99d7b593168d1c00cffb866e54ded7795e32ff4415eeb93da7bd0b6b48b715b086eb79fa241',","         h'4d785658f36c22fb5aed3ac0',","         h'1fe9cbc007a6c1212a4bc12f937b0a37',","         h'd8cb58206102c4d301eb1bedc6c8a85e644c47a9384806c6ae830add1bf203d64f84423b'","      ]","   )",")"]},{"anchor":"Tagged-CBOR-Annotated-Binary","level":3,"type":"heading","text":"Tagged CBOR Annotated Binary"},{"type":"codeListing","syntax":null,"code":["d8 c8                                    # tag(200)   ; envelope","   d8 c9                                 # tag(201)   ; crypto-msg","      84                                 # array(4)","         5860                            # bytes(96)","            09a4494231ef9cc0707f42928c31577554e9f6aec8227ce2f678a7045f3e8341714562a7255070d5d8e3202ca39f0574f40567c89210c5fa152ef99d7b593168d1c00cffb866e54ded7795e32ff4415eeb93da7bd0b6b48b715b086eb79fa241","         4c                              # bytes(12)","            4d785658f36c22fb5aed3ac0","         50                              # bytes(16)","            1fe9cbc007a6c1212a4bc12f937b0a37","         5824                            # bytes(36)","            d8cb58206102c4d301eb1bedc6c8a85e644c47a9384806c6ae830add1bf203d64f84423b"]},{"anchor":"Test-Vector-6-Encrypt-Then-Sign","level":2,"type":"heading","text":"Test Vector 6: Encrypt Then Sign"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A message is first encrypted, then signed. Its signature may be checked before the envelope is decrypted."}]},{"anchor":"Payload-in-Envelope-Notation","level":3,"type":"heading","text":"Payload in Envelope Notation"},{"type":"codeListing","syntax":null,"code":["ENCRYPTED [","    verifiedBy: Signature","]"]},{"anchor":"UR","level":3,"type":"heading","text":"UR"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"type":"emphasis","inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field serves this purpose."}]}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/lftpsptpsolrgaashhpmtdnshpvssocmgsgtkshfhdwfjzcpzohtweftrtgdtnayfthdeskofyrydesgqdseimsbnldlhddktpsbhdcxlksojzuyktbykovsecbygebsldeninbdfptkwebtwzdpadglwetbgltnwdmwhlhktpsptputlftpsptpuraxtpsptpcstpuehdfzsgmwsklyeezodydmrfyasblajlbdmhgujyjnsradtojnplpsclnednhgnlclihfdkbfrcslstlknperlnlioeohspdonadfdlaykfnssfmfmwzflgmsefsbahydnssdabzeccsad"]},{"anchor":"Tagged-CBOR-Binary","level":3,"type":"heading","text":"Tagged CBOR Binary"},{"type":"codeListing","syntax":null,"code":["d8c882d8c8d8c98449095cadd29c5be8c9164c4d785658f36c22fb5aed3ac050da083a58397644bd28cab3c16acb992f5824d8cb58208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59d8c8d8dd82d8c8d8df03d8c8d818d8de5840ca94c58134fb302ebcf8cb806f0b9053746dc301ce6daeac219f2b57992165487e3b1883d57aafb799673361a8a5014880f53cc43e3ef24752c13d0e5e2bc425"]},{"anchor":"Tagged-CBOR-Diagnostic-Notation","level":3,"type":"heading","text":"Tagged CBOR Diagnostic Notation"},{"type":"codeListing","syntax":null,"code":["200(   ; envelope","   [","      200(   ; envelope","         201(   ; crypto-msg","            [","               h'095cadd29c5be8c916',","               h'4d785658f36c22fb5aed3ac0',","               h'da083a58397644bd28cab3c16acb992f',","               h'd8cb58208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59'","            ]","         )","      ),","      200(   ; envelope","         221(   ; assertion","            [","               200(   ; envelope","                  223(3)   ; known-value","               ),","               200(   ; envelope","                  24(   ; leaf","                     222(   ; signature","                        h'ca94c58134fb302ebcf8cb806f0b9053746dc301ce6daeac219f2b57992165487e3b1883d57aafb799673361a8a5014880f53cc43e3ef24752c13d0e5e2bc425'","                     )","                  )","               )","            ]","         )","      )","   ]",")"]},{"anchor":"Tagged-CBOR-Annotated-Binary","level":3,"type":"heading","text":"Tagged CBOR Annotated Binary"},{"type":"codeListing","syntax":null,"code":["d8 c8                                    # tag(200)   ; envelope","   82                                    # array(2)","      d8 c8                              # tag(200)   ; envelope","         d8 c9                           # tag(201)   ; crypto-msg","            84                           # array(4)","               49                        # bytes(9)","                  095cadd29c5be8c916","               4c                        # bytes(12)","                  4d785658f36c22fb5aed3ac0","               50                        # bytes(16)","                  da083a58397644bd28cab3c16acb992f","               5824                      # bytes(36)","                  d8cb58208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59","      d8 c8                              # tag(200)   ; envelope","         d8 dd                           # tag(221)   ; assertion","            82                           # array(2)","               d8 c8                     # tag(200)   ; envelope","                  d8 df                  # tag(223)   ; known-value","                     03                  # unsigned(3)","               d8 c8                     # tag(200)   ; envelope","                  d8 18                  # tag(24)   ; leaf","                     d8 de               # tag(222)   ; signature","                        5840             # bytes(64)","                           ca94c58134fb302ebcf8cb806f0b9053746dc301ce6daeac219f2b57992165487e3b1883d57aafb799673361a8a5014880f53cc43e3ef24752c13d0e5e2bc425"]},{"anchor":"Test-Vector-7-Multi-Recipient","level":2,"type":"heading","text":"Test Vector 7: Multi-Recipient"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alice encrypts a message using the public keys of Bob and Carol so that it can only be decrypted by the private key of either Bob or Carol. Each of the "},{"type":"codeVoice","code":"SealedMessage"},{"type":"text","text":" encrypts just the symmetric key used to encrypt the payload."}]},{"anchor":"Payload-in-Envelope-Notation","level":3,"type":"heading","text":"Payload in Envelope Notation"},{"type":"codeListing","syntax":null,"code":["ENCRYPTED [","    hasRecipient: SealedMessage","    hasRecipient: SealedMessage","]"]},{"anchor":"UR","level":3,"type":"heading","text":"UR"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"type":"emphasis","inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field serves this purpose."}]}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/lstpsptpsolrgaashhpmtdnshpvssocmgsgtkshfhdwfjzcpzohtweftrtgdtnayfthdeskofyrydesgqdseimsbnldlhddktpsbhdcxlksojzuyktbykovsecbygebsldeninbdfptkwebtwzdpadglwetbgltnwdmwhlhktpsptputlftpsptpurahtpsptpcstptklftpsolshddkdtjntehehflylfkkvwmkonnsnblfgazseotytolkbtaaeemswtnnsrdirpttdajspabntejogsgtkshfhdwfjzcpzohtweftrtgddikktylfcttiladamusprdkkhesgurwptpvahdcxwfvllybtethybasnvtfemerfrftscaoytymskbdncewyrnhlwtkorteyyaoltdcttpsptputlftpsptpurahtpsptpcstptklftpsolshddktlincpototuyehdwvdfnesplfmckmwhlhlrpjzosbehkbzkowkclesvdsbwfcakphetiztsagsgtkshfhdwfjzcpzohtweftrtgdfnwnhnmtzootwphnbkfndalkfxonnebztpvahdcxwfvllybtethybasnvtfemerfrftscaoytymskbdncewyrnhlwtkorteyyaoltdctgmsggymt"]},{"anchor":"Tagged-CBOR-Binary","level":3,"type":"heading","text":"Tagged CBOR Binary"},{"type":"codeListing","syntax":null,"code":["d8c883d8c8d8c98449095cadd29c5be8c9164c4d785658f36c22fb5aed3ac050da083a58397644bd28cab3c16acb992f5824d8cb58208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59d8c8d8dd82d8c8d8df05d8c8d818d8cf82d8c9835824296dd35f56818279e598a59ca08249fa33d4ce8c0d043497f09ec327b6d12571b10cd3704c4d785658f36c22fb5aed3ac0502779d4821fd0802593c8ba795fcadfecd8e65820f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21fd8c8d8dd82d8c8d8df05d8c8d818d8cf82d8c9835824d56922a3a3db312ce73c39ae3e1e945d5db66ca710591576f42139e7cbf31d755fd0fcc24c4d785658f36c22fb5aed3ac0503cf16096fba3ec600a3c258c43a59f15d8e65820f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f"]},{"anchor":"Tagged-CBOR-Diagnostic-Notation","level":3,"type":"heading","text":"Tagged CBOR Diagnostic Notation"},{"type":"codeListing","syntax":null,"code":["200(   ; envelope","   [","      200(   ; envelope","         201(   ; crypto-msg","            [","               h'095cadd29c5be8c916',","               h'4d785658f36c22fb5aed3ac0',","               h'da083a58397644bd28cab3c16acb992f',","               h'd8cb58208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59'","            ]","         )","      ),","      200(   ; envelope","         221(   ; assertion","            [","               200(   ; envelope","                  223(5)   ; known-value","               ),","               200(   ; envelope","                  24(   ; leaf","                     207(   ; crypto-sealed","                        [","                           201(   ; crypto-msg","                              [","                                 h'296dd35f56818279e598a59ca08249fa33d4ce8c0d043497f09ec327b6d12571b10cd370',","                                 h'4d785658f36c22fb5aed3ac0',","                                 h'2779d4821fd0802593c8ba795fcadfec'","                              ]","                           ),","                           230(   ; agreement-public-key","                              h'f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f'","                           )","                        ]","                     )","                  )","               )","            ]","         )","      ),","      200(   ; envelope","         221(   ; assertion","            [","               200(   ; envelope","                  223(5)   ; known-value","               ),","               200(   ; envelope","                  24(   ; leaf","                     207(   ; crypto-sealed","                        [","                           201(   ; crypto-msg","                              [","                                 h'd56922a3a3db312ce73c39ae3e1e945d5db66ca710591576f42139e7cbf31d755fd0fcc2',","                                 h'4d785658f36c22fb5aed3ac0',","                                 h'3cf16096fba3ec600a3c258c43a59f15'","                              ]","                           ),","                           230(   ; agreement-public-key","                              h'f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f'","                           )","                        ]","                     )","                  )","               )","            ]","         )","      )","   ]",")"]},{"anchor":"Tagged-CBOR-Annotated-Binary","level":3,"type":"heading","text":"Tagged CBOR Annotated Binary"},{"type":"codeListing","syntax":null,"code":["d8 c8                                    # tag(200)   ; envelope","   83                                    # array(3)","      d8 c8                              # tag(200)   ; envelope","         d8 c9                           # tag(201)   ; crypto-msg","            84                           # array(4)","               49                        # bytes(9)","                  095cadd29c5be8c916","               4c                        # bytes(12)","                  4d785658f36c22fb5aed3ac0","               50                        # bytes(16)","                  da083a58397644bd28cab3c16acb992f","               5824                      # bytes(36)","                  d8cb58208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59","      d8 c8                              # tag(200)   ; envelope","         d8 dd                           # tag(221)   ; assertion","            82                           # array(2)","               d8 c8                     # tag(200)   ; envelope","                  d8 df                  # tag(223)   ; known-value","                     05                  # unsigned(5)","               d8 c8                     # tag(200)   ; envelope","                  d8 18                  # tag(24)   ; leaf","                     d8 cf               # tag(207)   ; crypto-sealed","                        82               # array(2)","                           d8 c9         # tag(201)   ; crypto-msg","                              83         # array(3)","                                 5824    # bytes(36)","                                    296dd35f56818279e598a59ca08249fa33d4ce8c0d043497f09ec327b6d12571b10cd370","                                 4c      # bytes(12)","                                    4d785658f36c22fb5aed3ac0","                                 50      # bytes(16)","                                    2779d4821fd0802593c8ba795fcadfec","                           d8 e6         # tag(230)   ; agreement-public-key","                              5820       # bytes(32)","                                 f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f","      d8 c8                              # tag(200)   ; envelope","         d8 dd                           # tag(221)   ; assertion","            82                           # array(2)","               d8 c8                     # tag(200)   ; envelope","                  d8 df                  # tag(223)   ; known-value","                     05                  # unsigned(5)","               d8 c8                     # tag(200)   ; envelope","                  d8 18                  # tag(24)   ; leaf","                     d8 cf               # tag(207)   ; crypto-sealed","                        82               # array(2)","                           d8 c9         # tag(201)   ; crypto-msg","                              83         # array(3)","                                 5824    # bytes(36)","                                    d56922a3a3db312ce73c39ae3e1e945d5db66ca710591576f42139e7cbf31d755fd0fcc2","                                 4c      # bytes(12)","                                    4d785658f36c22fb5aed3ac0","                                 50      # bytes(16)","                                    3cf16096fba3ec600a3c258c43a59f15","                           d8 e6         # tag(230)   ; agreement-public-key","                              5820       # bytes(32)","                                 f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f"]},{"anchor":"Test-Vector-8-Visible-Signature-Multi-Recipient","level":2,"type":"heading","text":"Test Vector 8: Visible Signature Multi-Recipient"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alice encrypts a message using the public keys of Bob and Carol so that it can only be decrypted by the private key of either Bob or Carol. Each of the "},{"type":"codeVoice","code":"SealedMessage"},{"type":"text","text":" encrypts just the symmetric key used to encrypt the payload. Alice then signs the envelope so her signature may be verified by anyone with her public key."}]},{"anchor":"Payload-in-Envelope-Notation","level":3,"type":"heading","text":"Payload in Envelope Notation"},{"type":"codeListing","syntax":null,"code":["ENCRYPTED [","    hasRecipient: SealedMessage","    hasRecipient: SealedMessage","    verifiedBy: Signature","]"]},{"anchor":"UR","level":3,"type":"heading","text":"UR"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"type":"emphasis","inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field serves this purpose."}]}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/lrtpsptpsolrgraslkbwlfnelbvysgghkpaegsgtkshfhdwfjzcpzohtweftrtgdbsltytietyurlarsgykistctgrkbbncehddktpsbhdcxlksojzuyktbykovsecbygebsldeninbdfptkwebtwzdpadglwetbgltnwdmwhlhktpsptputlftpsptpurahtpsptpcstptklftpsolshddkdtjntehehflylfkkvwmkonnsnblfgazseotytolkbtaaeemswtnnsrdirpttdajspabntejogsgtkshfhdwfjzcpzohtweftrtgddikktylfcttiladamusprdkkhesgurwptpvahdcxwfvllybtethybasnvtfemerfrftscaoytymskbdncewyrnhlwtkorteyyaoltdcttpsptputlftpsptpuraxtpsptpcstpuehdfzsgmwsklyeezodydmrfyasblajlbdmhgujyjnsradtojnplpsclnednhgnlclihfdkbfrcslstlknperlnlioeohspdonadfdlaykfnssfmfmwzflgmsefsbahydnssdatpsptputlftpsptpurahtpsptpcstptklftpsolshddktlincpototuyehdwvdfnesplfmckmwhlhlrpjzosbehkbzkowkclesvdsbwfcakphetiztsagsgtkshfhdwfjzcpzohtweftrtgdfnwnhnmtzootwphnbkfndalkfxonnebztpvahdcxwfvllybtethybasnvtfemerfrftscaoytymskbdncewyrnhlwtkorteyyaoltdctjpgsmsyk"]},{"anchor":"Tagged-CBOR-Binary","level":3,"type":"heading","text":"Tagged CBOR Binary"},{"type":"codeListing","syntax":null,"code":["d8c884d8c8d8c9844b098c13829f7fe1ca5475004c4d785658f36c22fb5aed3ac0500f87f964d4df80bf517dc71f4b7e0c1c5824d8cb58208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59d8c8d8dd82d8c8d8df05d8c8d818d8cf82d8c9835824296dd35f56818279e598a59ca08249fa33d4ce8c0d043497f09ec327b6d12571b10cd3704c4d785658f36c22fb5aed3ac0502779d4821fd0802593c8ba795fcadfecd8e65820f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21fd8c8d8dd82d8c8d8df03d8c8d818d8de5840ca94c58134fb302ebcf8cb806f0b9053746dc301ce6daeac219f2b57992165487e3b1883d57aafb799673361a8a5014880f53cc43e3ef24752c13d0e5e2bc425d8c8d8dd82d8c8d8df05d8c8d818d8cf82d8c9835824d56922a3a3db312ce73c39ae3e1e945d5db66ca710591576f42139e7cbf31d755fd0fcc24c4d785658f36c22fb5aed3ac0503cf16096fba3ec600a3c258c43a59f15d8e65820f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f"]},{"anchor":"Tagged-CBOR-Diagnostic-Notation","level":3,"type":"heading","text":"Tagged CBOR Diagnostic Notation"},{"type":"codeListing","syntax":null,"code":["200(   ; envelope","   [","      200(   ; envelope","         201(   ; crypto-msg","            [","               h'098c13829f7fe1ca547500',","               h'4d785658f36c22fb5aed3ac0',","               h'0f87f964d4df80bf517dc71f4b7e0c1c',","               h'd8cb58208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59'","            ]","         )","      ),","      200(   ; envelope","         221(   ; assertion","            [","               200(   ; envelope","                  223(5)   ; known-value","               ),","               200(   ; envelope","                  24(   ; leaf","                     207(   ; crypto-sealed","                        [","                           201(   ; crypto-msg","                              [","                                 h'296dd35f56818279e598a59ca08249fa33d4ce8c0d043497f09ec327b6d12571b10cd370',","                                 h'4d785658f36c22fb5aed3ac0',","                                 h'2779d4821fd0802593c8ba795fcadfec'","                              ]","                           ),","                           230(   ; agreement-public-key","                              h'f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f'","                           )","                        ]","                     )","                  )","               )","            ]","         )","      ),","      200(   ; envelope","         221(   ; assertion","            [","               200(   ; envelope","                  223(3)   ; known-value","               ),","               200(   ; envelope","                  24(   ; leaf","                     222(   ; signature","                        h'ca94c58134fb302ebcf8cb806f0b9053746dc301ce6daeac219f2b57992165487e3b1883d57aafb799673361a8a5014880f53cc43e3ef24752c13d0e5e2bc425'","                     )","                  )","               )","            ]","         )","      ),","      200(   ; envelope","         221(   ; assertion","            [","               200(   ; envelope","                  223(5)   ; known-value","               ),","               200(   ; envelope","                  24(   ; leaf","                     207(   ; crypto-sealed","                        [","                           201(   ; crypto-msg","                              [","                                 h'd56922a3a3db312ce73c39ae3e1e945d5db66ca710591576f42139e7cbf31d755fd0fcc2',","                                 h'4d785658f36c22fb5aed3ac0',","                                 h'3cf16096fba3ec600a3c258c43a59f15'","                              ]","                           ),","                           230(   ; agreement-public-key","                              h'f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f'","                           )","                        ]","                     )","                  )","               )","            ]","         )","      )","   ]",")"]},{"anchor":"Tagged-CBOR-Annotated-Binary","level":3,"type":"heading","text":"Tagged CBOR Annotated Binary"},{"type":"codeListing","syntax":null,"code":["d8 c8                                    # tag(200)   ; envelope","   84                                    # array(4)","      d8 c8                              # tag(200)   ; envelope","         d8 c9                           # tag(201)   ; crypto-msg","            84                           # array(4)","               4b                        # bytes(11)","                  098c13829f7fe1ca547500","               4c                        # bytes(12)","                  4d785658f36c22fb5aed3ac0","               50                        # bytes(16)","                  0f87f964d4df80bf517dc71f4b7e0c1c","               5824                      # bytes(36)","                  d8cb58208cc96cdb771176e835114a0f8936690b41cfed0df22d014eedd64edaea945d59","      d8 c8                              # tag(200)   ; envelope","         d8 dd                           # tag(221)   ; assertion","            82                           # array(2)","               d8 c8                     # tag(200)   ; envelope","                  d8 df                  # tag(223)   ; known-value","                     05                  # unsigned(5)","               d8 c8                     # tag(200)   ; envelope","                  d8 18                  # tag(24)   ; leaf","                     d8 cf               # tag(207)   ; crypto-sealed","                        82               # array(2)","                           d8 c9         # tag(201)   ; crypto-msg","                              83         # array(3)","                                 5824    # bytes(36)","                                    296dd35f56818279e598a59ca08249fa33d4ce8c0d043497f09ec327b6d12571b10cd370","                                 4c      # bytes(12)","                                    4d785658f36c22fb5aed3ac0","                                 50      # bytes(16)","                                    2779d4821fd0802593c8ba795fcadfec","                           d8 e6         # tag(230)   ; agreement-public-key","                              5820       # bytes(32)","                                 f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f","      d8 c8                              # tag(200)   ; envelope","         d8 dd                           # tag(221)   ; assertion","            82                           # array(2)","               d8 c8                     # tag(200)   ; envelope","                  d8 df                  # tag(223)   ; known-value","                     03                  # unsigned(3)","               d8 c8                     # tag(200)   ; envelope","                  d8 18                  # tag(24)   ; leaf","                     d8 de               # tag(222)   ; signature","                        5840             # bytes(64)","                           ca94c58134fb302ebcf8cb806f0b9053746dc301ce6daeac219f2b57992165487e3b1883d57aafb799673361a8a5014880f53cc43e3ef24752c13d0e5e2bc425","      d8 c8                              # tag(200)   ; envelope","         d8 dd                           # tag(221)   ; assertion","            82                           # array(2)","               d8 c8                     # tag(200)   ; envelope","                  d8 df                  # tag(223)   ; known-value","                     05                  # unsigned(5)","               d8 c8                     # tag(200)   ; envelope","                  d8 18                  # tag(24)   ; leaf","                     d8 cf               # tag(207)   ; crypto-sealed","                        82               # array(2)","                           d8 c9         # tag(201)   ; crypto-msg","                              83         # array(3)","                                 5824    # bytes(36)","                                    d56922a3a3db312ce73c39ae3e1e945d5db66ca710591576f42139e7cbf31d755fd0fcc2","                                 4c      # bytes(12)","                                    4d785658f36c22fb5aed3ac0","                                 50      # bytes(16)","                                    3cf16096fba3ec600a3c258c43a59f15","                           d8 e6         # tag(230)   ; agreement-public-key","                              5820       # bytes(32)","                                 f3e3810d385e0ecde04591bcbcd71da1d4977e2b1ceebe5df076c032f8a6d21f"]},{"anchor":"Test-Vector-9-Verifiable-Credential","level":2,"type":"heading","text":"Test Vector 9: Verifiable Credential"},{"type":"paragraph","inlineContent":[{"type":"text","text":"John Smith is issued a Permanent Resident Card signed by the State of Example"}]},{"anchor":"Payload-in-Envelope-Notation","level":3,"type":"heading","text":"Payload in Envelope Notation"},{"type":"codeListing","syntax":null,"code":["{","    CID(174842ea) [","        \"dateIssued\": 2022-04-27","        holder: CID(78bc3000) [","            \"birthCountry\": \"bs\" [","                note: \"The Bahamas\"","            ]","            \"birthDate\": 1974-02-18","            \"familyName\": \"SMITH\"","            \"givenName\": \"JOHN\"","            \"image\": Digest(03b7adb0) [","                dereferenceVia: \"https:\/\/exampleledger.com\/digest\/36be30726befb65ca13b136ae29d8081f64792c2702415eb60ad1c56ed33c999\"","                note: \"This is an image of John Smith.\"","            ]","            \"lprCategory\": \"C09\"","            \"lprNumber\": \"999-999-999\"","            \"residentSince\": 2018-01-07","            \"sex\": \"MALE\"","            isA: \"Permanent Resident\"","            isA: \"Person\"","        ]","        isA: \"credential\"","        issuer: CID(04363d5f) [","            dereferenceVia: URI(https:\/\/exampleledger.com\/cid\/04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8)","            note: \"Issued by the State of Example\"","        ]","        note: \"The State of Example recognizes JOHN SMITH as a Permanent Resident.\"","    ]","} [","    verifiedBy: Signature [","        note: \"Made by the State of Example.\"","    ]","]"]},{"anchor":"UR","level":3,"type":"heading","text":"UR"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"type":"emphasis","inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field serves this purpose."}]}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/lftpsptpvtlntpsptpcstpsghdcxchfdfwwdsrzofytsyndsvetsndkbbelbtdmuskhfdtyntbcprocktyatktaxaosptpsptputlftpsptpuraotpsptpcsimiajpihieihjtjyinhsjztpsptputlftpsptpuraatpsptpcsksfxghisihcxgujyhsjyihcxjliycxfekshsjnjojzihcxjpihiajliojtinknihjkcxgegwfdglcxgugtgaghfdcxhsjkcxhscxgdihjpjnhsjtihjtjycxgmihjkinieihjtjydmtpsptputlftpsptpurbatpsplktpsptpcstpsghdcxksrfdyaeflkootmhhpsfrhronbeytkjpdwwdwtrkzocygawdwfcshepyhdaysguotpsptputlftpsptpuraotpsptpcsiygdihjpjkjljttpsptputlftpsptpcsimiyhsjninjzkkglhsjnihtpsptpcsihgugtgaghfdtpsptputlftpsptpcsinioinkoihjtglhsjnihtpsptpcsiegegwfdgltpsptputlftpsptpcsihinjnhsioihtpsplstpsptpcstpsbhdcxaxrlpmpfrpzsdlrplobkfrhevtmnbaemplhyinbdtlsfbefsvaylmdgtfzlnessatpsptputlftpsptpurastpsptpcskshsisjyjyjojkftdldlihkshsjnjojzihjzihieioihjpdmiajljndlieinioihjkjydleoenidiheodyemeyenidihiyideneciahseheoideheoenhsiheyesieetdyetehiyeneeemeseyiaeyemdyeyeeehecihidendyhsieehiaecenihieeoeoiaesesestpsptputlftpsptpuraatpsptpcsksctghisinjkcxinjkcxhsjtcxinjnhsioihcxjliycxgejlisjtcxgujninjyisdmtpsptputlftpsptpuraotpsptpcsjpgdihjpjnhsjtihjtjycxgmihjkinieihjtjytpsptputlftpsptpcsjejzjojpfxhsjyihiojljpkktpsptpcsiafxdyestpsptputlftpsptpcsinidinjpjyisfyhsjyihtpsptpcssecyatskiolatpsptputlftpsptpcsjzidinjpjyisfxjlkpjtjyjpkktpsplftpsptpcsididjktpsptputlftpsptpuraatpsptpcsjeghisihcxfwhsishsjnhsjktpsptputlftpsptpcsinjzjojpglkpjnidihjptpsptpcsjeesesesdpesesesdpesesestpsptputlftpsptpcsjnjpihjkinieihjtjyguinjtiaihtpsptpcssecyhtgyiaaetpsptputlftpsptpcsiajkihkstpsptpcsiegtfpgsfetpsptputlftpsptpurbttpsplstpsptpcstpsghdcxaaenfsheytmseorfbsbzktrdrdfybkwntkeegetaveghzstattdertbswsihahvstpsptputlftpsptpuraatpsptpcsksckgajkjkkpihiecxidkkcxjyisihcxgujyhsjyihcxjliycxfekshsjnjojzihtpsptputlftpsptpurastpsptpcstpcxkshyisjyjyjojkftdldlihkshsjnjojzihjzihieioihjpdmiajljndliainiedldyeeeoeneoieeciyiyesesemeoeoidiadyiyehecememidhsidhseeeedyhsiyehiaiyeoeeeehsieesiheeeceeiyhsieesieeheyetiadydyiyihiyenecdyecihettpsptputlftpsptpcsimiehsjyihgajkjkkpihietpsptpcssecyidisltlatpsptputlftpsptpuraxtpsplftpsptpcstpuehdfzfgcxnetltntscxlggoeylgbgwnatatpfhgfxrtoekpbnrorpondnjebktatpmutsstmkbejsinmegtmehppdmkflkodrynytdndtjomtrtpkhsjyjykbreeshsrtdpjstpsptputlftpsptpuraatpsptpcskscagthsieihcxidkkcxjyisihcxgujyhsjyihcxjliycxfekshsjnjojzihdmrtiacydt"]},{"anchor":"Tagged-CBOR-Binary","level":3,"type":"heading","text":"Tagged CBOR Binary"},{"type":"codeListing","syntax":null,"code":["d8c882d8c8d8e086d8c8d818d8ca5820174842eac3fb44d7f626e4d79b7e107fd293c55629f6d622b81ed407770302c8d8c8d8dd82d8c8d8df02d8c8d8186a63726564656e7469616cd8c8d8dd82d8c8d8df04d8c8d8187843546865205374617465206f66204578616d706c65207265636f676e697a6573204a4f484e20534d4954482061732061205065726d616e656e74205265736964656e742ed8c8d8dd82d8c8d8df0ed8c88cd8c8d818d8ca582078bc30004776a3905bccb9b8a032cf722ceaf0bbfb1a49eaf3185fab5808cadcd8c8d8dd82d8c8d8df02d8c8d81866506572736f6ed8c8d8dd82d8c8d8186a66616d696c794e616d65d8c8d81865534d495448d8c8d8dd82d8c8d81869676976656e4e616d65d8c8d818644a4f484ed8c8d8dd82d8c8d81865696d616765d8c883d8c8d818d8cb582003b7adb0b6fa2fb6880a3b5fe08e0e37ae5e690bd5cc103de6f7954d408639c2d8c8d8dd82d8c8d8df09d8c8d818786168747470733a2f2f6578616d706c656c65646765722e636f6d2f6469676573742f33366265333037323662656662363563613133623133366165323964383038316636343739326332373032343135656236306164316335366564333363393939d8c8d8dd82d8c8d8df04d8c8d818781f5468697320697320616e20696d616765206f66204a6f686e20536d6974682ed8c8d8dd82d8c8d8df02d8c8d818725065726d616e656e74205265736964656e74d8c8d8dd82d8c8d8186b6c707243617465676f7279d8c8d81863433039d8c8d8dd82d8c8d81869626972746844617465d8c8d818c11a07c56780d8c8d8dd82d8c8d8186c6269727468436f756e747279d8c882d8c8d818626273d8c8d8dd82d8c8d8df04d8c8d8186b54686520426168616d6173d8c8d8dd82d8c8d818696c70724e756d626572d8c8d8186b3939392d3939392d393939d8c8d8dd82d8c8d8186d7265736964656e7453696e6365d8c8d818c11a5a516300d8c8d8dd82d8c8d81863736578d8c8d818644d414c45d8c8d8dd82d8c8d8df0dd8c883d8c8d818d8ca582004363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8d8c8d8dd82d8c8d8df04d8c8d818781e49737375656420627920746865205374617465206f66204578616d706c65d8c8d8dd82d8c8d8df09d8c8d818d820785e68747470733a2f2f6578616d706c656c65646765722e636f6d2f6369642f30343336336435666639393733336263306631353737626162613434306166316366333434616439653435346661643964313238633030666566363530356538d8c8d8dd82d8c8d8186a64617465497373756564d8c8d818c11a62688780d8c8d8dd82d8c8d8df03d8c882d8c8d818d8de584046209fd5dad7208d55328d12f10707b05743c0a2750cb8b6a52b6b0ad9d893d7c798107169914d915ba89847762af6f92b297096c0aa6174747eb53961c02d71d8c8d8dd82d8c8d8df04d8c8d818781d4d61646520627920746865205374617465206f66204578616d706c652e"]},{"anchor":"Tagged-CBOR-Diagnostic-Notation","level":3,"type":"heading","text":"Tagged CBOR Diagnostic Notation"},{"type":"codeListing","syntax":null,"code":["200(   ; envelope","   [","      200(   ; envelope","         224(   ; wrapped-envelope","            [","               200(   ; envelope","                  24(   ; leaf","                     202(   ; crypto-cid","                        h'174842eac3fb44d7f626e4d79b7e107fd293c55629f6d622b81ed407770302c8'","                     )","                  )","               ),","               200(   ; envelope","                  221(   ; assertion","                     [","                        200(   ; envelope","                           223(2)   ; known-value","                        ),","                        200(   ; envelope","                           24(\"credential\")   ; leaf","                        )","                     ]","                  )","               ),","               200(   ; envelope","                  221(   ; assertion","                     [","                        200(   ; envelope","                           223(4)   ; known-value","                        ),","                        200(   ; envelope","                           24(   ; leaf","                              \"The State of Example recognizes JOHN SMITH as a Permanent Resident.\"","                           )","                        )","                     ]","                  )","               ),","               200(   ; envelope","                  221(   ; assertion","                     [","                        200(   ; envelope","                           223(14)   ; known-value","                        ),","                        200(   ; envelope","                           [","                              200(   ; envelope","                                 24(   ; leaf","                                    202(   ; crypto-cid","                                       h'78bc30004776a3905bccb9b8a032cf722ceaf0bbfb1a49eaf3185fab5808cadc'","                                    )","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          223(2)   ; known-value","                                       ),","                                       200(   ; envelope","                                          24(\"Person\")   ; leaf","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          24(\"familyName\")   ; leaf","                                       ),","                                       200(   ; envelope","                                          24(\"SMITH\")   ; leaf","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          24(\"givenName\")   ; leaf","                                       ),","                                       200(   ; envelope","                                          24(\"JOHN\")   ; leaf","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          24(\"image\")   ; leaf","                                       ),","                                       200(   ; envelope","                                          [","                                             200(   ; envelope","                                                24(   ; leaf","                                                   203(   ; crypto-digest","                                                      h'03b7adb0b6fa2fb6880a3b5fe08e0e37ae5e690bd5cc103de6f7954d408639c2'","                                                   )","                                                )","                                             ),","                                             200(   ; envelope","                                                221(   ; assertion","                                                   [","                                                      200(   ; envelope","                                                         223(9)   ; known-value","                                                      ),","                                                      200(   ; envelope","                                                         24(   ; leaf","                                                            \"https:\/\/exampleledger.com\/digest\/36be30726befb65ca13b136ae29d8081f64792c2702415eb60ad1c56ed33c999\"","                                                         )","                                                      )","                                                   ]","                                                )","                                             ),","                                             200(   ; envelope","                                                221(   ; assertion","                                                   [","                                                      200(   ; envelope","                                                         223(4)   ; known-value","                                                      ),","                                                      200(   ; envelope","                                                         24(   ; leaf","                                                            \"This is an image of John Smithenvelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          223(2)   ; known-value","                                       ),","                                       200(   ; envelope","                                          24(\"Permanent Resident\")   ; leaf","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          24(\"lprCategory\")   ; leaf","                                       ),","                                       200(   ; envelope","                                          24(\"C09\")   ; leaf","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          24(\"birthDate\")   ; leaf","                                       ),","                                       200(   ; envelope","                                          24(   ; leaf","                                             1(1974-02-18T00:00:00Z)","                                          )","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          24(\"birthCountry\")   ; leaf","                                       ),","                                       200(   ; envelope","                                          [","                                             200(   ; envelope","                                                24(\"bs\")   ; leaf","                                             ),","                                             200(   ; envelope","                                                221(   ; assertion","                                                   [","                                                      200(   ; envelope","                                                         223(4)   ; known-value","                                                      ),","                                                      200(   ; envelope","                                                         24(\"The Bahamas\")   ; leaf","                                                      )","                                                   ]","                                                )","                                             )","                                          ]","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          24(\"lprNumber\")   ; leaf","                                       ),","                                       200(   ; envelope","                                          24(\"999-999-999\")   ; leaf","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          24(\"residentSince\")   ; leaf","                                       ),","                                       200(   ; envelope","                                          24(   ; leaf","                                             1(2018-01-07T00:00:00Z)","                                          )","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          24(\"sex\")   ; leaf","                                       ),","                                       200(   ; envelope","                                          24(\"MALE\")   ; leaf","                                       )","                                    ]","                                 )","                              )","                           ]","                        )","                     ]","                  )","               ),","               200(   ; envelope","                  221(   ; assertion","                     [","                        200(   ; envelope","                           223(13)   ; known-value","                        ),","                        200(   ; envelope","                           [","                              200(   ; envelope","                                 24(   ; leaf","                                    202(   ; crypto-cid","                                       h'04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8'","                                    )","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          223(4)   ; known-value","                                       ),","                                       200(   ; envelope","                                          24(   ; leaf","                                             \"Issued by the State of Example\"","                                          )","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          223(9)   ; known-value","                                       ),","                                       200(   ; envelope","                                          24(   ; leaf","                                             32(","                                                \"https:\/\/exampleledger.com\/cid\/04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8\"","                                             )","                                          )","                                       )","                                    ]","                                 )","                              )","                           ]","                        )","                     ]","                  )","               ),","               200(   ; envelope","                  221(   ; assertion","                     [","                        200(   ; envelope","                           24(\"dateIssued\")   ; leaf","                        ),","                        200(   ; envelope","                           24(   ; leaf","                              1(2022-04-27T00:00:00Z)","                           )","                        )","                     ]","                  )","               )","            ]","         )","      ),","      200(   ; envelope","         221(   ; assertion","            [","               200(   ; envelope","                  223(3)   ; known-value","               ),","               200(   ; envelope","                  [","                     200(   ; envelope","                        24(   ; leaf","                           222(   ; signature","                              h'46209fd5dad7208d55328d12f10707b05743c0a2750cb8b6a52b6b0ad9d893d7c798107169914d915ba89847762af6f92b297096c0aa6174747eb53961c02d71'","                           )","                        )","                     ),","                     200(   ; envelope","                        221(   ; assertion","                           [","                              200(   ; envelope","                                 223(4)   ; known-value","                              ),","                              200(   ; envelope","                                 24(   ; leaf","                                    \"Made by the State of Example.\"","                                 )","                              )","                           ]","                        )","                     )","                  ]","               )","            ]","         )","      )","   ]",")"]},{"anchor":"Tagged-CBOR-Annotated-Binary","level":3,"type":"heading","text":"Tagged CBOR Annotated Binary"},{"type":"codeListing","syntax":null,"code":["d8 c8                                    # tag(200)   ; envelope","   82                                    # array(2)","      d8 c8                              # tag(200)   ; envelope","         d8 e0                           # tag(224)   ; wrapped-envelope","            86                           # array(6)","               d8 c8                     # tag(200)   ; envelope","                  d8 18                  # tag(24)   ; leaf","                     d8 ca               # tag(202)   ; crypto-cid","                        5820             # bytes(32)","                           174842eac3fb44d7f626e4d79b7e107fd293c55629f6d622b81ed407770302c8","               d8 c8                     # tag(200)   ; envelope","                  d8 dd                  # tag(221)   ; assertion","                     82                  # array(2)","                        d8 c8            # tag(200)   ; envelope","                           d8 df         # tag(223)   ; known-value","                              02         # unsigned(2)","                        d8 c8            # tag(200)   ; envelope","                           d8 18         # tag(24)   ; leaf","                              6a         # text(10)","                                 63726564656e7469616c # \"credential\"","               d8 c8                     # tag(200)   ; envelope","                  d8 dd                  # tag(221)   ; assertion","                     82                  # array(2)","                        d8 c8            # tag(200)   ; envelope","                           d8 df         # tag(223)   ; known-value","                              04         # unsigned(4)","                        d8 c8            # tag(200)   ; envelope","                           d8 18         # tag(24)   ; leaf","                              78 43      # text(67)","                                 546865205374617465206f66204578616d706c65207265636f676e697a6573204a4f484e20534d4954482061732061205065726d616e656e74205265736964656e742e # \"The State of Example recognizes JOHN SMITH as a Permanent Resident.\"","               d8 c8                     # tag(200)   ; envelope","                  d8 dd                  # tag(221)   ; assertion","                     82                  # array(2)","                        d8 c8            # tag(200)   ; envelope","                           d8 df         # tag(223)   ; known-value","                              0e         # unsigned(14)","                        d8 c8            # tag(200)   ; envelope","                           8c            # array(12)","                              d8 c8      # tag(200)   ; envelope","                                 d8 18   # tag(24)   ; leaf","                                    d8 ca # tag(202)   ; crypto-cid","                                       5820 # bytes(32)","                                          78bc30004776a3905bccb9b8a032cf722ceaf0bbfb1a49eaf3185fab5808cadc","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 df # tag(223)   ; known-value","                                             02 # unsigned(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             66 # text(6)","                                                506572736f6e # \"Person\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             6a # text(10)","                                                66616d696c794e616d65 # \"familyName\"","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             65 # text(5)","                                                534d495448 # \"SMITH\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             69 # text(9)","                                                676976656e4e616d65 # \"givenName\"","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             64 # text(4)","                                                4a4f484e # \"JOHN\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             65 # text(5)","                                                696d616765 # \"image\"","                                       d8 c8 # tag(200)   ; envelope","                                          83 # array(3)","                                             d8 c8 # tag(200)   ; envelope","                                                d8 18 # tag(24)   ; leaf","                                                   d8 cb # tag(203)   ; crypto-digest","                                                      5820 # bytes(32)","                                                         03b7adb0b6fa2fb6880a3b5fe08e0e37ae5e690bd5cc103de6f7954d408639c2","                                             d8 c8 # tag(200)   ; envelope","                                                d8 dd # tag(221)   ; assertion","                                                   82 # array(2)","                                                      d8 c8 # tag(200)   ; envelope","                                                         d8 df # tag(223)   ; known-value","                                                            09 # unsigned(9)","                                                      d8 c8 # tag(200)   ; envelope","                                                         d8 18 # tag(24)   ; leaf","                                                            78 61 # text(97)","                                                               68747470733a2f2f6578616d706c656c65646765722e636f6d2f6469676573742f33366265333037323662656662363563613133623133366165323964383038316636343739326332373032343135656236306164316335366564333363393939 # \"https:\/\/exampleledger.com\/digest\/36be30726befb65ca13b136ae29d8081f64792c2702415eb60ad1c56ed33c999\"","                                             d8 c8 # tag(200)   ; envelope","                                                d8 dd # tag(221)   ; assertion","                                                   82 # array(2)","                                                      d8 c8 # tag(200)   ; envelope","                                                         d8 df # tag(223)   ; known-value","                                                            04 # unsigned(4)","                                                      d8 c8 # tag(200)   ; envelope","                                                         d8 18 # tag(24)   ; leaf","                                                            78 1f # text(31)","                                                               5468697320697320616e20696d616765206f66204a6f686e20536d6974682e # \"This is an image of John Smith.\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 df # tag(223)   ; known-value","                                             02 # unsigned(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             72 # text(18)","                                                5065726d616e656e74205265736964656e74 # \"Permanent Resident\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             6b # text(11)","                                                6c707243617465676f7279 # \"lprCategory\"","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             63 # text(3)","                                                433039 # \"C09\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             69 # text(9)","                                                626972746844617465 # \"birthDate\"","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             c1 # tag(1)","                                                1a07c56780 # unsigned(130377600)","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             6c # text(12)","                                                6269727468436f756e747279 # \"birthCountry\"","                                       d8 c8 # tag(200)   ; envelope","                                          82 # array(2)","                                             d8 c8 # tag(200)   ; envelope","                                                d8 18 # tag(24)   ; leaf","                                                   62 # text(2)","                                                      6273 # \"bs\"","                                             d8 c8 # tag(200)   ; envelope","                                                d8 dd # tag(221)   ; assertion","                                                   82 # array(2)","                                                      d8 c8 # tag(200)   ; envelope","                                                         d8 df # tag(223)   ; known-value","                                                            04 # unsigned(4)","                                                      d8 c8 # tag(200)   ; envelope","                                                         d8 18 # tag(24)   ; leaf","                                                            6b # text(11)","                                                               54686520426168616d6173 # \"The Bahamas\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             69 # text(9)","                                                6c70724e756d626572 # \"lprNumber\"","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             6b # text(11)","                                                3939392d3939392d393939 # \"999-999-999\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             6d # text(13)","                                                7265736964656e7453696e6365 # \"residentSince\"","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             c1 # tag(1)","                                                1a5a516300 # unsigned(1515283200)","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             63 # text(3)","                                                736578 # \"sex\"","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             64 # text(4)","                                                4d414c45 # \"MALE\"","               d8 c8                     # tag(200)   ; envelope","                  d8 dd                  # tag(221)   ; assertion","                     82                  # array(2)","                        d8 c8            # tag(200)   ; envelope","                           d8 df         # tag(223)   ; known-value","                              0d         # unsigned(13)","                        d8 c8            # tag(200)   ; envelope","                           83            # array(3)","                              d8 c8      # tag(200)   ; envelope","                                 d8 18   # tag(24)   ; leaf","                                    d8 ca # tag(202)   ; crypto-cid","                                       5820 # bytes(32)","                                          04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 df # tag(223)   ; known-value","                                             04 # unsigned(4)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             78 1e # text(30)","                                                49737375656420627920746865205374617465206f66204578616d706c65 # \"Issued by the State of Example\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 df # tag(223)   ; known-value","                                             09 # unsigned(9)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             d8 20 # tag(32)","                                                78 5e # text(94)","                                                   68747470733a2f2f6578616d706c656c65646765722e636f6d2f6369642f30343336336435666639393733336263306631353737626162613434306166316366333434616439653435346661643964313238633030666566363530356538 # \"https:\/\/exampleledger.com\/cid\/04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8\"","               d8 c8                     # tag(200)   ; envelope","                  d8 dd                  # tag(221)   ; assertion","                     82                  # array(2)","                        d8 c8            # tag(200)   ; envelope","                           d8 18         # tag(24)   ; leaf","                              6a         # text(10)","                                 64617465497373756564 # \"dateIssued\"","                        d8 c8            # tag(200)   ; envelope","                           d8 18         # tag(24)   ; leaf","                              c1         # tag(1)","                                 1a62688780 # unsigned(1651017600)","      d8 c8                              # tag(200)   ; envelope","         d8 dd                           # tag(221)   ; assertion","            82                           # array(2)","               d8 c8                     # tag(200)   ; envelope","                  d8 df                  # tag(223)   ; known-value","                     03                  # unsigned(3)","               d8 c8                     # tag(200)   ; envelope","                  82                     # array(2)","                     d8 c8               # tag(200)   ; envelope","                        d8 18            # tag(24)   ; leaf","                           d8 de         # tag(222)   ; signature","                              5840       # bytes(64)","                                 46209fd5dad7208d55328d12f10707b05743c0a2750cb8b6a52b6b0ad9d893d7c798107169914d915ba89847762af6f92b297096c0aa6174747eb53961c02d71","                     d8 c8               # tag(200)   ; envelope","                        d8 dd            # tag(221)   ; assertion","                           82            # array(2)","                              d8 c8      # tag(200)   ; envelope","                                 d8 df   # tag(223)   ; known-value","                                    04   # unsigned(4)","                              d8 c8      # tag(200)   ; envelope","                                 d8 18   # tag(24)   ; leaf","                                    78 1d # text(29)","                                       4d61646520627920746865205374617465206f66204578616d706c652e # \"Made by the State of Example.\""]},{"anchor":"Test-Vector-10-Redacted-Verifiable-Credential","level":2,"type":"heading","text":"Test Vector 10: Redacted Verifiable Credential"},{"type":"paragraph","inlineContent":[{"type":"text","text":"John wishes to identify himself to a third party using his government-issued credential, but does not wish to reveal more than his name, his photo, and the fact that the state has verified his identity. Despite redacting numerous fields, the overall digest of the elided structure is the same, and the signature still validates."}]},{"anchor":"Payload-in-Envelope-Notation","level":3,"type":"heading","text":"Payload in Envelope Notation"},{"type":"codeListing","syntax":null,"code":["{","    CID(174842ea) [","        holder: CID(78bc3000) [","            \"familyName\": \"SMITH\"","            \"givenName\": \"JOHN\"","            \"image\": Digest(03b7adb0) [","                dereferenceVia: \"https:\/\/exampleledger.com\/digest\/36be30726befb65ca13b136ae29d8081f64792c2702415eb60ad1c56ed33c999\"","                note: \"This is an image of John Smith.\"","            ]","            ELIDED (8)","        ]","        isA: \"credential\"","        issuer: CID(04363d5f) [","            dereferenceVia: URI(https:\/\/exampleledger.com\/cid\/04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8)","            note: \"Issued by the State of Example\"","        ]","        ELIDED (2)","    ]","} [","    verifiedBy: Signature [","        note: \"Made by the State of Example.\"","    ]","]"]},{"anchor":"UR","level":3,"type":"heading","text":"UR"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸ‘‰ "},{"type":"emphasis","inlineContent":[{"type":"text","text":"The CBOR in a UR is never tagged, because the UR "},{"type":"codeVoice","code":"type"},{"type":"text","text":" field serves this purpose."}]}]},{"type":"codeListing","syntax":null,"code":["ur:envelope\/lftpsptpvtlntpsptpcstpsghdcxchfdfwwdsrzofytsyndsvetsndkbbelbtdmuskhfdtyntbcprocktyatktaxaosptpsptputlftpsptpuraotpsptpcsimiajpihieihjtjyinhsjztpsptpsbhdcxgwadayeykirefswsfdlbrlgyzehyuyfdrdbzsowkzcmyktdmsrosrpbacemkrebetpsptputlftpsptpurbatpsplktpsptpcstpsghdcxksrfdyaeflkootmhhpsfrhronbeytkjpdwwdwtrkzocygawdwfcshepyhdaysguotpsptpsbhdcxbdenkikeylctgdgdlupsrodevsknlstolfeebziddemuyllpnekojepakeidcygmtpsptputlftpsptpcsimiyhsjninjzkkglhsjnihtpsptpcsihgugtgaghfdtpsptputlftpsptpcsinioinkoihjtglhsjnihtpsptpcsiegegwfdgltpsptputlftpsptpcsihinjnhsioihtpsplstpsptpcstpsbhdcxaxrlpmpfrpzsdlrplobkfrhevtmnbaemplhyinbdtlsfbefsvaylmdgtfzlnessatpsptputlftpsptpurastpsptpcskshsisjyjyjojkftdldlihkshsjnjojzihjzihieioihjpdmiajljndlieinioihjkjydleoenidiheodyemeyenidihiyideneciahseheoideheoenhsiheyesieetdyetehiyeneeemeseyiaeyemdyeyeeehecihidendyhsieehiaecenihieeoeoiaesesestpsptputlftpsptpuraatpsptpcsksctghisinjkcxinjkcxhsjtcxinjnhsioihcxjliycxgejlisjtcxgujninjyisdmtpsptpsbhdcxkggskbhpgswfhnmnreswmkbgvtihrhdtlsoemeuypkgestchsfbkfmprmyrltykptpsptpsbhdcxnsmkylvtfseegsgotaammhcezebdgwhyhhyljkrhwfqzoskgeosodsgmpmhgzchhtpsptpsbhdcxosfmfplpfxvefzoybncfwzgtfewdcapsqdkkuolagdtdltvwfdttvorflocwzegatpsptpsbhdcxtybdfdbzcsskrtdrfxwzjllrylnteodwgomsmnmtbylffyrnfdtalasrfwndatghtpsptpsbhdcxtbcffdrptpstzmmomdktssmegedwvdecgadtdsreaygtdifwmokimwaodwbyuozmtpsptpsbhdcxvyidloaagdetmopfrnbwleidmeioftfptavtlnptprvohnfpmtcegdseamceotwytpsptpsbhdcxzejocerptnaxchswvossceasnehkgefyptmhndretdghwtwepymwoyrocmnntdditpsptputlftpsptpurbttpsplstpsptpcstpsghdcxaaenfsheytmseorfbsbzktrdrdfybkwntkeegetaveghzstattdertbswsihahvstpsptputlftpsptpuraatpsptpcsksckgajkjkkpihiecxidkkcxjyisihcxgujyhsjyihcxjliycxfekshsjnjojzihtpsptputlftpsptpurastpsptpcstpcxkshyisjyjyjojkftdldlihkshsjnjojzihjzihieioihjpdmiajljndliainiedldyeeeoeneoieeciyiyesesemeoeoidiadyiyehecememidhsidhseeeedyhsiyehiaiyeoeeeehsieesiheeeceeiyhsieesieeheyetiadydyiyihiyenecdyecihettpsptpsbhdcxwmesosbwlupscfiopltaemchmdzmtllrgraxlnrhwnkbfmlrveadrtlobspspmmstpsptputlftpsptpuraxtpsplftpsptpcstpuehdfzfgcxnetltntscxlggoeylgbgwnatatpfhgfxrtoekpbnrorpondnjebktatpmutsstmkbejsinmegtmehppdmkflkodrynytdndtjomtrtpkhsjyjykbreeshsrtdpjstpsptputlftpsptpuraatpsptpcskscagthsieihcxidkkcxjyisihcxgujyhsjyihcxjliycxfekshsjnjojzihdmylcwbwzc"]},{"anchor":"Tagged-CBOR-Binary","level":3,"type":"heading","text":"Tagged CBOR Binary"},{"type":"codeListing","syntax":null,"code":["d8c882d8c8d8e086d8c8d818d8ca5820174842eac3fb44d7f626e4d79b7e107fd293c55629f6d622b81ed407770302c8d8c8d8dd82d8c8d8df02d8c8d8186a63726564656e7469616cd8c8d8cb58204f0108327db53def487fb751fe5edb48ba15c9f4fd8f772ec3a7b60e1c98b510d8c8d8dd82d8c8d8df0ed8c88cd8c8d818d8ca582078bc30004776a3905bccb9b8a032cf722ceaf0bbfb1a49eaf3185fab5808cadcd8c8d8cb58200b367d7cf71f50508bacb828e87a83ce823415622893f7859f766bb17c621a52d8c8d8dd82d8c8d8186a66616d696c794e616d65d8c8d81865534d495448d8c8d8dd82d8c8d81869676976656e4e616d65d8c8d818644a4f484ed8c8d8dd82d8c8d81865696d616765d8c883d8c8d818d8cb582003b7adb0b6fa2fb6880a3b5fe08e0e37ae5e690bd5cc103de6f7954d408639c2d8c8d8dd82d8c8d8df09d8c8d818786168747470733a2f2f6578616d706c656c65646765722e636f6d2f6469676573742f33366265333037323662656662363563613133623133366165323964383038316636343739326332373032343135656236306164316335366564333363393939d8c8d8dd82d8c8d8df04d8c8d818781f5468697320697320616e20696d616765206f66204a6f686e20536d6974682ed8c8d8cb58207b4c7e5b4cf3608eb5c69812e065b92983a291dbaa4ac717cc0a3eb28fb7d475d8c8d8cb58209c98f7e03d344c55d906901cfe0b4f5e5cf773b9f3b4a77b33c92652ad57fd5cd8c8d8cb5820a73e418543e440a10c19f24d45ea1dacb379dc8050d287e548d1e2bc881bfe49d8c8d8cb5820d40b481518c5c02a43f26f84f79d332c55978e96118244be48d980c3429b0754d8c8d8cb5820d61948b6d8c7ff929577c4914a2ce735492926b5084d2742927d94022c11dcffd8c8d8cb5820e1628804503892b0be138a6291673a41d9e086a9b2e26041961c50c1061ca3eed8c8d8cb5820fe701cb6da0317c6e2c41c099f594a44a9909bb5d254f0edab94a1b8169ed227d8c8d8dd82d8c8d8df0dd8c883d8c8d818d8ca582004363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8d8c8d8dd82d8c8d8df04d8c8d818781e49737375656420627920746865205374617465206f66204578616d706c65d8c8d8dd82d8c8d8df09d8c8d818d820785e68747470733a2f2f6578616d706c656c65646765722e636f6d2f6369642f30343336336435666639393733336263306631353737626162613434306166316366333434616439653435346661643964313238633030666566363530356538d8c8d8cb5820eb39a7138bac1967aed9371795ffd5844b0386b9f17e3e84e401c0880facad97d8c8d8dd82d8c8d8df03d8c882d8c8d818d8de584046209fd5dad7208d55328d12f10707b05743c0a2750cb8b6a52b6b0ad9d893d7c798107169914d915ba89847762af6f92b297096c0aa6174747eb53961c02d71d8c8d8dd82d8c8d8df04d8c8d818781d4d61646520627920746865205374617465206f66204578616d706c652e"]},{"anchor":"Tagged-CBOR-Diagnostic-Notation","level":3,"type":"heading","text":"Tagged CBOR Diagnostic Notation"},{"type":"codeListing","syntax":null,"code":["200(   ; envelope","   [","      200(   ; envelope","         224(   ; wrapped-envelope","            [","               200(   ; envelope","                  24(   ; leaf","                     202(   ; crypto-cid","                        h'174842eac3fb44d7f626e4d79b7e107fd293c55629f6d622b81ed407770302c8'","                     )","                  )","               ),","               200(   ; envelope","                  221(   ; assertion","                     [","                        200(   ; envelope","                           223(2)   ; known-value","                        ),","                        200(   ; envelope","                           24(\"credential\")   ; leaf","                        )","                     ]","                  )","               ),","               200(   ; envelope","                  203(   ; crypto-digest","                     h'4f0108327db53def487fb751fe5edb48ba15c9f4fd8f772ec3a7b60e1c98b510'","                  )","               ),","               200(   ; envelope","                  221(   ; assertion","                     [","                        200(   ; envelope","                           223(14)   ; known-value","                        ),","                        200(   ; envelope","                           [","                              200(   ; envelope","                                 24(   ; leaf","                                    202(   ; crypto-cid","                                       h'78bc30004776a3905bccb9b8a032cf722ceaf0bbfb1a49eaf3185fab5808cadc'","                                    )","                                 )","                              ),","                              200(   ; envelope","                                 203(   ; crypto-digest","                                    h'0b367d7cf71f50508bacb828e87a83ce823415622893f7859f766bb17c621a52'","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          24(\"familyName\")   ; leaf","                                       ),","                                       200(   ; envelope","                                          24(\"SMITH\")   ; leaf","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          24(\"givenName\")   ; leaf","                                       ),","                                       200(   ; envelope","                                          24(\"JOHN\")   ; leaf","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          24(\"image\")   ; leaf","                                       ),","                                       200(   ; envelope","                                          [","                                             200(   ; envelope","                                                24(   ; leaf","                                                   203(   ; crypto-digest","                                                      h'03b7adb0b6fa2fb6880a3b5fe08e0e37ae5e690bd5cc103de6f7954d408639c2'","                                                   )","                                                )","                                             ),","                                             200(   ; envelope","                                                221(   ; assertion","                                                   [","                                                      200(   ; envelope","                                                         223(9)   ; known-value","                                                      ),","                                                      200(   ; envelope","                                                         24(   ; leaf","                                                            \"https:\/\/exampleledger.com\/digest\/36be30726befb65ca13b136ae29d8081f64792c2702415eb60ad1c56ed33c999\"","                                                         )","                                                      )","                                                   ]","                                                )","                                             ),","                                             200(   ; envelope","                                                221(   ; assertion","                                                   [","                                                      200(   ; envelope","                                                         223(4)   ; known-value","                                                      ),","                                                      200(   ; envelope","                                                         24(   ; leaf","                                                            \"This is an image of John Smithenvelope","                                 203(   ; crypto-digest","                                    h'7b4c7e5b4cf3608eb5c69812e065b92983a291dbaa4ac717cc0a3eb28fb7d475'","                                 )","                              ),","                              200(   ; envelope","                                 203(   ; crypto-digest","                                    h'9c98f7e03d344c55d906901cfe0b4f5e5cf773b9f3b4a77b33c92652ad57fd5c'","                                 )","                              ),","                              200(   ; envelope","                                 203(   ; crypto-digest","                                    h'a73e418543e440a10c19f24d45ea1dacb379dc8050d287e548d1e2bc881bfe49'","                                 )","                              ),","                              200(   ; envelope","                                 203(   ; crypto-digest","                                    h'd40b481518c5c02a43f26f84f79d332c55978e96118244be48d980c3429b0754'","                                 )","                              ),","                              200(   ; envelope","                                 203(   ; crypto-digest","                                    h'd61948b6d8c7ff929577c4914a2ce735492926b5084d2742927d94022c11dcff'","                                 )","                              ),","                              200(   ; envelope","                                 203(   ; crypto-digest","                                    h'e1628804503892b0be138a6291673a41d9e086a9b2e26041961c50c1061ca3ee'","                                 )","                              ),","                              200(   ; envelope","                                 203(   ; crypto-digest","                                    h'fe701cb6da0317c6e2c41c099f594a44a9909bb5d254f0edab94a1b8169ed227'","                                 )","                              )","                           ]","                        )","                     ]","                  )","               ),","               200(   ; envelope","                  221(   ; assertion","                     [","                        200(   ; envelope","                           223(13)   ; known-value","                        ),","                        200(   ; envelope","                           [","                              200(   ; envelope","                                 24(   ; leaf","                                    202(   ; crypto-cid","                                       h'04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8'","                                    )","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          223(4)   ; known-value","                                       ),","                                       200(   ; envelope","                                          24(   ; leaf","                                             \"Issued by the State of Example\"","                                          )","                                       )","                                    ]","                                 )","                              ),","                              200(   ; envelope","                                 221(   ; assertion","                                    [","                                       200(   ; envelope","                                          223(9)   ; known-value","                                       ),","                                       200(   ; envelope","                                          24(   ; leaf","                                             32(","                                                \"https:\/\/exampleledger.com\/cid\/04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8\"","                                             )","                                          )","                                       )","                                    ]","                                 )","                              )","                           ]","                        )","                     ]","                  )","               ),","               200(   ; envelope","                  203(   ; crypto-digest","                     h'eb39a7138bac1967aed9371795ffd5844b0386b9f17e3e84e401c0880facad97'","                  )","               )","            ]","         )","      ),","      200(   ; envelope","         221(   ; assertion","            [","               200(   ; envelope","                  223(3)   ; known-value","               ),","               200(   ; envelope","                  [","                     200(   ; envelope","                        24(   ; leaf","                           222(   ; signature","                              h'46209fd5dad7208d55328d12f10707b05743c0a2750cb8b6a52b6b0ad9d893d7c798107169914d915ba89847762af6f92b297096c0aa6174747eb53961c02d71'","                           )","                        )","                     ),","                     200(   ; envelope","                        221(   ; assertion","                           [","                              200(   ; envelope","                                 223(4)   ; known-value","                              ),","                              200(   ; envelope","                                 24(   ; leaf","                                    \"Made by the State of Example.\"","                                 )","                              )","                           ]","                        )","                     )","                  ]","               )","            ]","         )","      )","   ]",")"]},{"anchor":"Tagged-CBOR-Annotated-Binary","level":3,"type":"heading","text":"Tagged CBOR Annotated Binary"},{"type":"codeListing","syntax":null,"code":["d8 c8                                    # tag(200)   ; envelope","   82                                    # array(2)","      d8 c8                              # tag(200)   ; envelope","         d8 e0                           # tag(224)   ; wrapped-envelope","            86                           # array(6)","               d8 c8                     # tag(200)   ; envelope","                  d8 18                  # tag(24)   ; leaf","                     d8 ca               # tag(202)   ; crypto-cid","                        5820             # bytes(32)","                           174842eac3fb44d7f626e4d79b7e107fd293c55629f6d622b81ed407770302c8","               d8 c8                     # tag(200)   ; envelope","                  d8 dd                  # tag(221)   ; assertion","                     82                  # array(2)","                        d8 c8            # tag(200)   ; envelope","                           d8 df         # tag(223)   ; known-value","                              02         # unsigned(2)","                        d8 c8            # tag(200)   ; envelope","                           d8 18         # tag(24)   ; leaf","                              6a         # text(10)","                                 63726564656e7469616c # \"credential\"","               d8 c8                     # tag(200)   ; envelope","                  d8 cb                  # tag(203)   ; crypto-digest","                     5820                # bytes(32)","                        4f0108327db53def487fb751fe5edb48ba15c9f4fd8f772ec3a7b60e1c98b510","               d8 c8                     # tag(200)   ; envelope","                  d8 dd                  # tag(221)   ; assertion","                     82                  # array(2)","                        d8 c8            # tag(200)   ; envelope","                           d8 df         # tag(223)   ; known-value","                              0e         # unsigned(14)","                        d8 c8            # tag(200)   ; envelope","                           8c            # array(12)","                              d8 c8      # tag(200)   ; envelope","                                 d8 18   # tag(24)   ; leaf","                                    d8 ca # tag(202)   ; crypto-cid","                                       5820 # bytes(32)","                                          78bc30004776a3905bccb9b8a032cf722ceaf0bbfb1a49eaf3185fab5808cadc","                              d8 c8      # tag(200)   ; envelope","                                 d8 cb   # tag(203)   ; crypto-digest","                                    5820 # bytes(32)","                                       0b367d7cf71f50508bacb828e87a83ce823415622893f7859f766bb17c621a52","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             6a # text(10)","                                                66616d696c794e616d65 # \"familyName\"","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             65 # text(5)","                                                534d495448 # \"SMITH\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             69 # text(9)","                                                676976656e4e616d65 # \"givenName\"","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             64 # text(4)","                                                4a4f484e # \"JOHN\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             65 # text(5)","                                                696d616765 # \"image\"","                                       d8 c8 # tag(200)   ; envelope","                                          83 # array(3)","                                             d8 c8 # tag(200)   ; envelope","                                                d8 18 # tag(24)   ; leaf","                                                   d8 cb # tag(203)   ; crypto-digest","                                                      5820 # bytes(32)","                                                         03b7adb0b6fa2fb6880a3b5fe08e0e37ae5e690bd5cc103de6f7954d408639c2","                                             d8 c8 # tag(200)   ; envelope","                                                d8 dd # tag(221)   ; assertion","                                                   82 # array(2)","                                                      d8 c8 # tag(200)   ; envelope","                                                         d8 df # tag(223)   ; known-value","                                                            09 # unsigned(9)","                                                      d8 c8 # tag(200)   ; envelope","                                                         d8 18 # tag(24)   ; leaf","                                                            78 61 # text(97)","                                                               68747470733a2f2f6578616d706c656c65646765722e636f6d2f6469676573742f33366265333037323662656662363563613133623133366165323964383038316636343739326332373032343135656236306164316335366564333363393939 # \"https:\/\/exampleledger.com\/digest\/36be30726befb65ca13b136ae29d8081f64792c2702415eb60ad1c56ed33c999\"","                                             d8 c8 # tag(200)   ; envelope","                                                d8 dd # tag(221)   ; assertion","                                                   82 # array(2)","                                                      d8 c8 # tag(200)   ; envelope","                                                         d8 df # tag(223)   ; known-value","                                                            04 # unsigned(4)","                                                      d8 c8 # tag(200)   ; envelope","                                                         d8 18 # tag(24)   ; leaf","                                                            78 1f # text(31)","                                                               5468697320697320616e20696d616765206f66204a6f686e20536d6974682e # \"This is an image of John Smith.\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 cb   # tag(203)   ; crypto-digest","                                    5820 # bytes(32)","                                       7b4c7e5b4cf3608eb5c69812e065b92983a291dbaa4ac717cc0a3eb28fb7d475","                              d8 c8      # tag(200)   ; envelope","                                 d8 cb   # tag(203)   ; crypto-digest","                                    5820 # bytes(32)","                                       9c98f7e03d344c55d906901cfe0b4f5e5cf773b9f3b4a77b33c92652ad57fd5c","                              d8 c8      # tag(200)   ; envelope","                                 d8 cb   # tag(203)   ; crypto-digest","                                    5820 # bytes(32)","                                       a73e418543e440a10c19f24d45ea1dacb379dc8050d287e548d1e2bc881bfe49","                              d8 c8      # tag(200)   ; envelope","                                 d8 cb   # tag(203)   ; crypto-digest","                                    5820 # bytes(32)","                                       d40b481518c5c02a43f26f84f79d332c55978e96118244be48d980c3429b0754","                              d8 c8      # tag(200)   ; envelope","                                 d8 cb   # tag(203)   ; crypto-digest","                                    5820 # bytes(32)","                                       d61948b6d8c7ff929577c4914a2ce735492926b5084d2742927d94022c11dcff","                              d8 c8      # tag(200)   ; envelope","                                 d8 cb   # tag(203)   ; crypto-digest","                                    5820 # bytes(32)","                                       e1628804503892b0be138a6291673a41d9e086a9b2e26041961c50c1061ca3ee","                              d8 c8      # tag(200)   ; envelope","                                 d8 cb   # tag(203)   ; crypto-digest","                                    5820 # bytes(32)","                                       fe701cb6da0317c6e2c41c099f594a44a9909bb5d254f0edab94a1b8169ed227","               d8 c8                     # tag(200)   ; envelope","                  d8 dd                  # tag(221)   ; assertion","                     82                  # array(2)","                        d8 c8            # tag(200)   ; envelope","                           d8 df         # tag(223)   ; known-value","                              0d         # unsigned(13)","                        d8 c8            # tag(200)   ; envelope","                           83            # array(3)","                              d8 c8      # tag(200)   ; envelope","                                 d8 18   # tag(24)   ; leaf","                                    d8 ca # tag(202)   ; crypto-cid","                                       5820 # bytes(32)","                                          04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 df # tag(223)   ; known-value","                                             04 # unsigned(4)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             78 1e # text(30)","                                                49737375656420627920746865205374617465206f66204578616d706c65 # \"Issued by the State of Example\"","                              d8 c8      # tag(200)   ; envelope","                                 d8 dd   # tag(221)   ; assertion","                                    82   # array(2)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 df # tag(223)   ; known-value","                                             09 # unsigned(9)","                                       d8 c8 # tag(200)   ; envelope","                                          d8 18 # tag(24)   ; leaf","                                             d8 20 # tag(32)","                                                78 5e # text(94)","                                                   68747470733a2f2f6578616d706c656c65646765722e636f6d2f6369642f30343336336435666639393733336263306631353737626162613434306166316366333434616439653435346661643964313238633030666566363530356538 # \"https:\/\/exampleledger.com\/cid\/04363d5ff99733bc0f1577baba440af1cf344ad9e454fad9d128c00fef6505e8\"","               d8 c8                     # tag(200)   ; envelope","                  d8 cb                  # tag(203)   ; crypto-digest","                     5820                # bytes(32)","                        eb39a7138bac1967aed9371795ffd5844b0386b9f17e3e84e401c0880facad97","      d8 c8                              # tag(200)   ; envelope","         d8 dd                           # tag(221)   ; assertion","            82                           # array(2)","               d8 c8                     # tag(200)   ; envelope","                  d8 df                  # tag(223)   ; known-value","                     03                  # unsigned(3)","               d8 c8                     # tag(200)   ; envelope","                  82                     # array(2)","                     d8 c8               # tag(200)   ; envelope","                        d8 18            # tag(24)   ; leaf","                           d8 de         # tag(222)   ; signature","                              5840       # bytes(64)","                                 46209fd5dad7208d55328d12f10707b05743c0a2750cb8b6a52b6b0ad9d893d7c798107169914d915ba89847762af6f92b297096c0aa6174747eb53961c02d71","                     d8 c8               # tag(200)   ; envelope","                        d8 dd            # tag(221)   ; assertion","                           82            # array(2)","                              d8 c8      # tag(200)   ; envelope","                                 d8 df   # tag(223)   ; known-value","                                    04   # unsigned(4)","                              d8 c8      # tag(200)   ; envelope","                                 d8 18   # tag(24)   ; leaf","                                    78 1d # text(29)","                                       4d61646520627920746865205374617465206f66204578616d706c652e # \"Made by the State of Example.\""]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/envelope\/envelopetestvectors"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Envelope\/documentation\/Envelope\/EnvelopeTestVectors","interfaceLanguage":"swift"},"kind":"article","metadata":{"roleHeading":"Article","title":"Envelope Test Vectors","role":"article","modules":[{"name":"Envelope"}]},"hierarchy":{"paths":[["doc:\/\/Envelope\/documentation\/Envelope"]]},"seeAlsoSections":[{"title":"Test Vectors","identifiers":["doc:\/\/Envelope\/documentation\/Envelope\/SSKRTestVectors"],"generated":true}],"references":{"#Test-Vector-6-Encrypt-Then-Sign":{"title":"Encrypt Then Sign","titleInlineContent":[{"type":"text","text":"Encrypt Then Sign"}],"type":"link","identifier":"#Test-Vector-6-Encrypt-Then-Sign","url":"#Test-Vector-6-Encrypt-Then-Sign"},"#Test-Vector-3-Multisigned-Plaintext":{"title":"Multisigned Plaintext","titleInlineContent":[{"type":"text","text":"Multisigned Plaintext"}],"type":"link","identifier":"#Test-Vector-3-Multisigned-Plaintext","url":"#Test-Vector-3-Multisigned-Plaintext"},"#Test-Vector-8-Visible-Signature-MultiRecipient":{"title":"Visible Signature Multi-Recipient","titleInlineContent":[{"type":"text","text":"Visible Signature Multi-Recipient"}],"type":"link","identifier":"#Test-Vector-8-Visible-Signature-MultiRecipient","url":"#Test-Vector-8-Visible-Signature-MultiRecipient"},"#Test-Vector-7-MultiRecipient":{"title":"Multi-Recipient","titleInlineContent":[{"type":"text","text":"Multi-Recipient"}],"type":"link","identifier":"#Test-Vector-7-MultiRecipient","url":"#Test-Vector-7-MultiRecipient"},"#Test-Vector-9-Verifiable-Credential":{"title":"Verifiable Credential","titleInlineContent":[{"type":"text","text":"Verifiable Credential"}],"type":"link","identifier":"#Test-Vector-9-Verifiable-Credential","url":"#Test-Vector-9-Verifiable-Credential"},"doc://Envelope/documentation/Envelope/SSKRTestVectors":{"role":"article","title":"SSKR Test Vectors","abstract":[],"identifier":"doc:\/\/Envelope\/documentation\/Envelope\/SSKRTestVectors","kind":"article","type":"topic","url":"\/documentation\/envelope\/sskrtestvectors"},"#Test-Vector-1-Hello-World":{"title":"Hello, World!","titleInlineContent":[{"type":"text","text":"Hello, World!"}],"type":"link","identifier":"#Test-Vector-1-Hello-World","url":"#Test-Vector-1-Hello-World"},"#Test-Vector-5-Sign-Then-Encrypt":{"title":"Sign Then Encrypt","titleInlineContent":[{"type":"text","text":"Sign Then Encrypt"}],"type":"link","identifier":"#Test-Vector-5-Sign-Then-Encrypt","url":"#Test-Vector-5-Sign-Then-Encrypt"},"doc://Envelope/documentation/Envelope":{"role":"collection","title":"Envelope","abstract":[{"type":"text","text":"Gordian Envelope: A flexible container for structured data."}],"identifier":"doc:\/\/Envelope\/documentation\/Envelope","kind":"symbol","type":"topic","url":"\/documentation\/envelope"},"#Test-Vector-10-Redacted-Verifiable-Credential":{"title":"Redacted Verifiable Credential","titleInlineContent":[{"type":"text","text":"Redacted Verifiable Credential"}],"type":"link","identifier":"#Test-Vector-10-Redacted-Verifiable-Credential","url":"#Test-Vector-10-Redacted-Verifiable-Credential"},"#Test-Vector-4-Symmetric-Encryption":{"title":"Symmetric Encryption","titleInlineContent":[{"type":"text","text":"Symmetric Encryption"}],"type":"link","identifier":"#Test-Vector-4-Symmetric-Encryption","url":"#Test-Vector-4-Symmetric-Encryption"},"#Test-Vector-2-Signed-Plaintext":{"title":"Signed Plaintext","titleInlineContent":[{"type":"text","text":"Signed Plaintext"}],"type":"link","identifier":"#Test-Vector-2-Signed-Plaintext","url":"#Test-Vector-2-Signed-Plaintext"}}}